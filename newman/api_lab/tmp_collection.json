{
	"info": {
		"_postman_id": "937e90d2-0211-4fdf-a3a6-99bf56dbb241",
		"name": "transixSO Test Latest for Lab",
		"description": "# CI回すようの環境\n\n## **実行前にDelayを600msほど掛けてください**",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16976505"
	},
	"item": [
		{
			"name": "既存アカウントを削除",
			"item": [
				{
					"name": "Delete User（ignore result）",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Xaas-Auth-Token",
								"value": "{{PARENT-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{HOST}}/v1/users/{{USERNAME}}",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"v1",
								"users",
								"{{USERNAME}}"
							],
							"query": [
								{
									"key": "isp_code",
									"value": "hogehoge01",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Parent(/v1/register's')（ignore result）",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Xaas-Auth-Token",
								"value": "{{REGISTER-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{HOST}}/v1/registers/{{PARENT-USERNAME}}",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"v1",
								"registers",
								"{{PARENT-USERNAME}}"
							],
							"query": [
								{
									"key": "isp_code",
									"value": "hogehoge01",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "アカウントの作成",
			"item": [
				{
					"name": "Admin logon（ignore result）",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"ADMIN-TOKEN\", data[\"x-xaas-auth-token\"]);",
									"postman.setEnvironmentVariable(\"X-Xaas-Auth-Token\", data[\"x-xaas-auth-token\"]);",
									"/*pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xaas-Api-Key",
								"value": "{{ADMIN-API-KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\":\"{{ADMIN-USERNAME}}\",\n    \"password\":\"{{ADMIN-PASSWORD}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{HOST}}/logon",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"logon"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Register（ignore result）",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"if (pm.response.code === 201) {",
									"  var data = JSON.parse(responseBody);",
									"　　　　postman.setEnvironmentVariable(\"REGISTER-USERNAME\", data[\"username\"]);",
									"　　　　postman.setEnvironmentVariable(\"REGISTER-PASSWORD\", \"Test-Password_01.\");",
									"　　　　postman.setEnvironmentVariable(\"REGISTER-API-KEY\", data[\"api_key\"]);",
									"} else {",
									"}",
									"",
									"/*pm.test(\"Status code is 201\", function () {",
									"  pm.response.to.have.status(201);",
									"  var data = JSON.parse(responseBody);",
									"　　　　postman.setEnvironmentVariable(\"REGISTER-USERNAME\", data[\"username\"]);",
									"　　　　postman.setEnvironmentVariable(\"REGISTER-PASSWORD\", \"Test-Password_01.\");",
									"　　　　postman.setEnvironmentVariable(\"REGISTER-API-KEY\", data[\"api_key\"]);",
									"});*/",
									"",
									"/* {",
									"  \"username\": \"test-user01\",",
									"  \"password\": \"e60c3de4d71279fb1d68738cf6df460130380f2435c459053d563818\",",
									"  \"role\": \"register-admin\",",
									"  \"expire_days\": null,",
									"  \"metadata\": null,",
									"  \"api_key\": \"ehV5uuNA435dAslEGQBRZ2kw8DCLvUR3KN2plN9zwR5rU9fifzsJXZ78wfecXLFZ\",",
									"  \"api_expire\": null,",
									"  \"origin\": \"TestPassword01\",",
									"  \"image\": null",
									"} */"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Xaas-Auth-Token",
								"value": "{{ADMIN-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"Test-Password_01.\",\n    \"role\": \"register-admin\",\n    \"username\": \"test-register05@mfeed.co.jp\"\n}"
						},
						"url": {
							"raw": "https://{{HOST}}/accounts",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"accounts"
							],
							"query": [
								{
									"key": "isp_code",
									"value": "hogehoge01",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Register to Authz api（ignore result）",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Xaas-Auth-Token",
								"value": "{{ADMIN-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"test-register05@mfeed.co.jp\",\n    \"ispCodes\": [\"1200009981\", \"9000001101\", \"9000003202\", \"IMFFFIMFFF\"],\n    \"registerFlag\": true,\n    \"portalFlag\": false,\n    \"parentUserFlag\": false,\n    \"createdBy\": \"mf-admin\"\n}\n\n"
						},
						"url": {
							"raw": "https://{{HOST}}/internal/v1/authz",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"internal",
								"v1",
								"authz"
							],
							"query": [
								{
									"key": "isp_code",
									"value": "hogehoge01",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Register logon",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"REGISTER-TOKEN\", data[\"x-xaas-auth-token\"]);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xaas-Api-Key",
								"value": "{{REGISTER-API-KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\":\"{{REGISTER-USERNAME}}\",\n    \"password\":\"{{REGISTER-PASSWORD}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{HOST}}/logon",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"logon"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Parent(/v1/registers)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"  pm.response.to.have.status(201);",
									"  var data = JSON.parse(responseBody);",
									"　　　　postman.setEnvironmentVariable(\"PARENT-USERNAME\", data[\"username\"]);",
									"　　　　postman.setEnvironmentVariable(\"PARENT-PASSWORD\", \"Test-Password_01.\");",
									"　　　　postman.setEnvironmentVariable(\"PARENT-API-KEY\", data[\"apiKey\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Xaas-Auth-token",
								"value": "{{REGISTER-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"test-parent05@mfeed.co.jp\",\n    \"password\": \"Test-Password_01.\",\n    \"ispCodes\": [\"1200009981\", \"9000001101\", \"9000003202\", \"IMFFFIMFFF\"],\n    \"role\": \"parent\"\n}"
						},
						"url": {
							"raw": "https://{{HOST}}/v1/registers",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"v1",
								"registers"
							],
							"query": [
								{
									"key": "isp_code",
									"value": "hogehoge01",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Parent logon",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Validate Response\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.limited).to.eql(false);",
									"});",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"PARENT-TOKEN\", data[\"x-xaas-auth-token\"]);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xaas-Api-Key",
								"value": "{{PARENT-API-KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\":\"{{PARENT-USERNAME}}\",\n    \"password\":\"{{PARENT-PASSWORD}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{HOST}}/logon",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"logon"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"  pm.response.to.have.status(201);",
									"  var data = JSON.parse(responseBody);",
									"  postman.setEnvironmentVariable(\"USERNAME\", data[\"username\"]);",
									"  postman.setEnvironmentVariable(\"PASSWORD\", \"Test-Password_01.\");",
									"  postman.setEnvironmentVariable(\"X-Xaas-Api-Key\", data[\"apiKey\"]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Xaas-Auth-Token",
								"value": "{{PARENT-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"test-user05@mfeed.co.jp\",\n    \"password\": \"Test-Password_01.\",\n    \"ispCodes\": [\"1200009981\", \"9000001101\", \"9000003202\", \"IMFFFIMFFF\"],\n    \"role\": \"user\"\n}"
						},
						"url": {
							"raw": "https://{{HOST}}/v1/users",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"v1",
								"users"
							],
							"query": [
								{
									"key": "isp_code",
									"value": "hogehoge01",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "User logon",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validate Response\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.limited).to.eql(false);",
									"});",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"USER-TOKEN\", data[\"x-xaas-auth-token\"]);",
									"postman.setEnvironmentVariable(\"X-Xaas-Auth-Token\", data[\"x-xaas-auth-token\"]);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xaas-Api-Key",
								"value": "{{X-Xaas-Api-Key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\":\"{{USERNAME}}\",\n    \"password\":\"{{PASSWORD}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{HOST}}/logon",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"logon"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "アカウントAPIテスト",
			"item": [
				{
					"name": "パスワードのバリデーションチェック",
					"item": [
						{
							"name": "Update Parent Password 400 (invalid password)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"  pm.response.to.have.status(400);",
											"});",
											"",
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"required\":[\"errorMessage\", \"moreInfo\"],",
											"    \"properties\": {",
											"        \"errorMessage\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"moreInfo\": {",
											"            \"type\": \"string\"",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"",
											"pm.test(\"moreInfo\", function () {",
											"  var jsonData = pm.response.json();",
											"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{REGISTER-TOKEN}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"password\": \"TestPassword02@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{HOST}}/v1/registers/{{PARENT-USERNAME}}",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"registers",
										"{{PARENT-USERNAME}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update User Password 400 (invalid password) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"  pm.response.to.have.status(400);",
											"});",
											"",
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"required\":[\"errorMessage\", \"moreInfo\"],",
											"    \"properties\": {",
											"        \"errorMessage\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"moreInfo\": {",
											"            \"type\": \"string\"",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"",
											"pm.test(\"moreInfo\", function () {",
											"  var jsonData = pm.response.json();",
											"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{PARENT-TOKEN}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"password\": \"TestPassword02@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{HOST}}/v1/users/{{USERNAME}}",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"users",
										"{{USERNAME}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Parent 400 (invalid password)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"  pm.response.to.have.status(400);",
											"});",
											"",
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"required\":[\"errorMessage\", \"moreInfo\"],",
											"    \"properties\": {",
											"        \"errorMessage\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"moreInfo\": {",
											"            \"type\": \"string\"",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"",
											"pm.test(\"moreInfo\", function () {",
											"  var jsonData = pm.response.json();",
											"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Xaas-Auth-token",
										"value": "{{REGISTER-TOKEN}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"test-parent01\",\n    \"password\": \"Test-Password_01.@\",\n    \"ispCodes\": [\"1000000001\",\"1000000002\",\"1000000003\"],\n    \"role\": \"parent\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{HOST}}/v1/registers",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"registers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create User 400 (invalid password)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"  pm.response.to.have.status(400);",
											"});",
											"",
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"required\":[\"errorMessage\", \"moreInfo\"],",
											"    \"properties\": {",
											"        \"errorMessage\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"moreInfo\": {",
											"            \"type\": \"string\"",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"",
											"pm.test(\"moreInfo\", function () {",
											"  var jsonData = pm.response.json();",
											"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Xaas-Auth-token",
										"value": "{{PARENT-TOKEN}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"test-user01\",\n    \"password\": \"Test-Password_01.@\",\n    \"ispCodes\": [\"1000000002\",\"1000000003\"],\n    \"role\": \"user\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{HOST}}/v1/users",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"users"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create Parent 400 (invalid role)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"  pm.response.to.have.status(400);",
									"});",
									"",
									"const schema = {",
									"    \"type\": \"object\",",
									"    \"required\":[\"errorMessage\", \"moreInfo\"],",
									"    \"properties\": {",
									"        \"errorMessage\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"moreInfo\": {",
									"            \"type\": \"string\"",
									"        }",
									"    }",
									"}",
									"",
									"pm.test(\"Validate schema\", function () {",
									"  pm.response.to.have.jsonSchema(schema)",
									"});",
									"",
									"pm.test(\"moreInfo\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Xaas-Auth-token",
								"value": "{{REGISTER-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"test-parent01@mfeed.co.jp\",\n    \"password\": \"TestPassword01\",\n    \"ispCodes\": [\"1000000001\",\"1000000002\",\"1000000003\"],\n    \"role\": \"prinsic\"\n}"
						},
						"url": {
							"raw": "https://{{HOST}}/v1/registers",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"v1",
								"registers"
							],
							"query": [
								{
									"key": "isp_code",
									"value": "hogehoge01",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Parent Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"strictSSL": false
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Xaas-Auth-Token",
								"value": "{{REGISTER-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{HOST}}/v1/registers",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"v1",
								"registers"
							],
							"query": [
								{
									"key": "isp_code",
									"value": "hogehoge01",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Parent User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"strictSSL": false
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Xaas-Auth-Token",
								"value": "{{REGISTER-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{HOST}}/v1/registers/{{PARENT-USERNAME}}",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"v1",
								"registers",
								"{{PARENT-USERNAME}}"
							],
							"query": [
								{
									"key": "isp_code",
									"value": "hogehoge01",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"strictSSL": false
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Xaas-Auth-token",
								"value": "{{PARENT-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{HOST}}/v1/users",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"v1",
								"users"
							],
							"query": [
								{
									"key": "isp_code",
									"value": "hogehoge01",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"strictSSL": false
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Xaas-Auth-token",
								"value": "{{PARENT-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{HOST}}/v1/users/{{USERNAME}}",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"v1",
								"users",
								"{{USERNAME}}"
							],
							"query": [
								{
									"key": "isp_code",
									"value": "hogehoge01",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Parent Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {",
									"    \"type\": \"object\",",
									"    \"required\":[\"username\", \"role\",\"apiKey\", \"ispCodes\"],",
									"    \"properties\": {",
									"        \"username\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"role\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"apiKey\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"ispCodes\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"                \"type\": \"string\",",
									"            }",
									"        }",
									"    }",
									"}",
									"pm.test(\"Validate schema\", function () {",
									"  pm.response.to.have.jsonSchema(schema)",
									"});",
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"  var data = JSON.parse(responseBody);",
									"  postman.setEnvironmentVariable(\"PARENT-USERNAME\", data[\"username\"]);",
									"  postman.setEnvironmentVariable(\"PARENT-PASSWORD\", \"TestPassword02\");",
									"  postman.setEnvironmentVariable(\"PARENT-API-KEY\", data[\"apiKey\"]);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Xaas-Auth-Token",
								"value": "{{REGISTER-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"TestPassword02\"\n}"
						},
						"url": {
							"raw": "https://{{HOST}}/v1/registers/{{PARENT-USERNAME}}",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"v1",
								"registers",
								"{{PARENT-USERNAME}}"
							],
							"query": [
								{
									"key": "isp_code",
									"value": "hogehoge01",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Parent Password 400 (short password)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"  pm.response.to.have.status(400);",
									"});",
									"",
									"const schema = {",
									"    \"type\": \"object\",",
									"    \"required\":[\"errorMessage\", \"moreInfo\"],",
									"    \"properties\": {",
									"        \"errorMessage\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"moreInfo\": {",
									"            \"type\": \"string\"",
									"        }",
									"    }",
									"}",
									"",
									"pm.test(\"Validate schema\", function () {",
									"  pm.response.to.have.jsonSchema(schema)",
									"});",
									"",
									"pm.test(\"moreInfo\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Xaas-Auth-Token",
								"value": "{{REGISTER-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"Test\"\n}"
						},
						"url": {
							"raw": "https://{{HOST}}/v1/registers/{{PARENT-USERNAME}}",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"v1",
								"registers",
								"{{PARENT-USERNAME}}"
							],
							"query": [
								{
									"key": "isp_code",
									"value": "hogehoge01",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Parent logon",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validate Response\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.limited).to.eql(false);",
									"});",
									"var data = JSON.parse(responseBody);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"postman.setEnvironmentVariable(\"PARENT-TOKEN\", data[\"x-xaas-auth-token\"]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xaas-Api-Key",
								"value": "{{PARENT-API-KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\":\"{{PARENT-USERNAME}}\",\n    \"password\":\"{{PARENT-PASSWORD}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{HOST}}/logon",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"logon"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Parent ispCodes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"if (pm.response.to.have.status(200)) {",
									"    var data = JSON.parse(responseBody);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Xaas-Auth-Token",
								"value": "{{REGISTER-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ispCodes\": [\"9000001101\"]\n}"
						},
						"url": {
							"raw": "https://{{HOST}}/v1/registers/{{PARENT-USERNAME}}",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"v1",
								"registers",
								"{{PARENT-USERNAME}}"
							],
							"query": [
								{
									"key": "isp_code",
									"value": "hogehoge01",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Parent ispCodes 400 (ispCode is too long)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"  pm.response.to.have.status(400);",
									"});",
									"",
									"const schema = {",
									"    \"type\": \"object\",",
									"    \"required\":[\"errorMessage\", \"moreInfo\"],",
									"    \"properties\": {",
									"        \"errorMessage\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"moreInfo\": {",
									"            \"type\": \"string\"",
									"        }",
									"    }",
									"}",
									"",
									"pm.test(\"Validate schema\", function () {",
									"  pm.response.to.have.jsonSchema(schema)",
									"});",
									"",
									"pm.test(\"moreInfo\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Xaas-Auth-Token",
								"value": "{{REGISTER-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ispCodes\": [\"200000000001\",\"1000000001\",\"1000000002\",\"1000000003\"]\n}"
						},
						"url": {
							"raw": "https://{{HOST}}/v1/registers/{{PARENT-USERNAME}}",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"v1",
								"registers",
								"{{PARENT-USERNAME}}"
							],
							"query": [
								{
									"key": "isp_code",
									"value": "hogehoge01",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Parent logon(api_keyが変わっていないことの確認)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validate Response\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.limited).to.eql(false);",
									"});",
									"var data = JSON.parse(responseBody);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"postman.setEnvironmentVariable(\"PARENT-TOKEN\", data[\"x-xaas-auth-token\"]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Xaas-Api-Key",
								"value": "{{PARENT-API-KEY}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\":\"{{PARENT-USERNAME}}\",\n    \"password\":\"{{PARENT-PASSWORD}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{HOST}}/logon",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"logon"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User 400 (invalid role)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"  pm.response.to.have.status(400);",
									"});",
									"",
									"const schema = {",
									"    \"type\": \"object\",",
									"    \"required\":[\"errorMessage\", \"moreInfo\"],",
									"    \"properties\": {",
									"        \"errorMessage\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"moreInfo\": {",
									"            \"type\": \"string\"",
									"        }",
									"    }",
									"}",
									"",
									"pm.test(\"Validate schema\", function () {",
									"  pm.response.to.have.jsonSchema(schema)",
									"});",
									"",
									"pm.test(\"moreInfo\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Xaas-Auth-Token",
								"value": "{{PARENT-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"test-user01\",\n    \"password\": \"TestPassword01\",\n    \"belonging_code\": [\"1000000002\",\"1000000003\"],\n    \"role\": \"parental\"\n}"
						},
						"url": {
							"raw": "https://{{HOST}}/v1/users",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"v1",
								"users"
							],
							"query": [
								{
									"key": "isp_code",
									"value": "hogehoge01",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Password 400 (short password)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"  pm.response.to.have.status(400);",
									"});",
									"",
									"const schema = {",
									"    \"type\": \"object\",",
									"    \"required\":[\"errorMessage\", \"moreInfo\"],",
									"    \"properties\": {",
									"        \"errorMessage\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"moreInfo\": {",
									"            \"type\": \"string\"",
									"        }",
									"    }",
									"}",
									"",
									"pm.test(\"Validate schema\", function () {",
									"  pm.response.to.have.jsonSchema(schema)",
									"});",
									"",
									"pm.test(\"moreInfo\", function () {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Xaas-Auth-Token",
								"value": "{{PARENT-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"Test\"\n}"
						},
						"url": {
							"raw": "https://{{HOST}}/v1/users/{{USERNAME}}",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"v1",
								"users",
								"{{USERNAME}}"
							],
							"query": [
								{
									"key": "isp_code",
									"value": "hogehoge01",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "IPoEオーダ",
			"item": [
				{
					"name": "回線契約情報一覧取得",
					"item": [
						{
							"name": "ipoeContracts List 200 OK",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"required\": [",
											"        \"pages\",",
											"        \"total\",",
											"        \"data\"",
											"    ],",
											"    \"properties\": {",
											"        \"pages\": {",
											"            \"type\": \"object\",",
											"            \"required\": [",
											"                \"current\",",
											"                \"next\",",
											"                \"prev\",",
											"                \"last\"",
											"            ],",
											"            \"properties\": {",
											"                \"current\": {",
											"                    \"type\": [\"number\", \"null\"]",
											"                },",
											"                \"next\": {",
											"                    \"type\": [\"number\", \"null\"]",
											"                },",
											"                \"prev\": {",
											"                    \"type\": [\"string\", \"null\"]",
											"                },",
											"                \"last\": {",
											"                    \"type\": [\"number\", \"null\"]",
											"                }",
											"            }",
											"        },",
											"        \"total\": {",
											"            \"type\": \"number\",",
											"        },",
											"        \"data\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"properties\": {",
											"                    \"id\": {",
											"                        \"type\": \"number\",",
											"                    },",
											"                    \"orderId\": {",
											"                        \"type\": \"number\",",
											"                    },",
											"                    \"contractStartDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"contractEndDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"contractCode\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ispCode\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ngnCommonId\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"nttArea\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipv6Prefix\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixLength\": {",
											"                        \"type\": [\"number\", \"null\"]",
											"                    },",
											"                    \"fletsServiceCode\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixIn\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixLengthIn\": {",
											"                        \"type\": [\"number\", \"null\"]",
											"                    },",
											"                    \"fletsServiceCodeIn\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"serviceStatus\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipoeServiceStatus\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipoeOpenDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipoeCloseDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"moving\": {",
											"                        \"type\": \"boolean\",",
											"                    },",
											"                    \"staticIp\": {",
											"                        \"type\": \"array\",",
											"                    },",
											"                    \"router\": {",
											"                        \"type\": \"array\",",
											"                    },",
											"                    \"bundle\": {",
											"                        \"type\": \"array\",",
											"                    }",
											"                },",
											"                \"required\": [",
											"                    \"id\",",
											"                    \"orderId\",",
											"                    \"contractStartDate\",",
											"                    \"contractEndDate\",",
											"                    \"contractCode\",",
											"                    \"ispCode\",",
											"                    \"ngnCommonId\",",
											"                    \"nttArea\",",
											"                    \"ipv6Prefix\",",
											"                    \"ipv6PrefixLength\",",
											"                    \"fletsServiceCode\",",
											"                    \"ipv6PrefixIn\",",
											"                    \"ipv6PrefixLengthIn\",",
											"                    \"fletsServiceCodeIn\",",
											"                    \"serviceStatus\",",
											"                    \"ipoeServiceStatus\",",
											"                    \"ipoeOpenDate\",",
											"                    \"ipoeCloseDate\",",
											"                    \"moving\",",
											"                    \"staticIp\",",
											"                    \"router\",",
											"                    \"bundle\"",
											"                ]",
											"            },",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/ipoeContracts",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"ipoeContracts"
									],
									"query": [
										{
											"key": "isp_code",
											"value": "hogehoge01",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ipoeContracts List 200 OK(ngnCommonId)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"required\": [",
											"        \"pages\",",
											"        \"total\",",
											"        \"data\"",
											"    ],",
											"    \"properties\": {",
											"        \"pages\": {",
											"            \"type\": \"object\",",
											"            \"required\": [",
											"                \"current\",",
											"                \"next\",",
											"                \"prev\",",
											"                \"last\"",
											"            ],",
											"            \"properties\": {",
											"                \"current\": {",
											"                    \"type\": [\"number\", \"null\"]",
											"                },",
											"                \"next\": {",
											"                    \"type\": [\"number\", \"null\"]",
											"                },",
											"                \"prev\": {",
											"                    \"type\": [\"string\", \"null\"]",
											"                },",
											"                \"last\": {",
											"                    \"type\": [\"number\", \"null\"]",
											"                }",
											"            }",
											"        },",
											"        \"total\": {",
											"            \"type\": \"number\",",
											"        },",
											"        \"data\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"properties\": {",
											"                    \"id\": {",
											"                        \"type\": \"number\",",
											"                    },",
											"                    \"orderId\": {",
											"                        \"type\": \"number\",",
											"                    },",
											"                    \"contractStartDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"contractEndDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"contractCode\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ispCode\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ngnCommonId\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"nttArea\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipv6Prefix\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixLength\": {",
											"                        \"type\": [\"number\", \"null\"]",
											"                    },",
											"                    \"fletsServiceCode\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixIn\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixLengthIn\": {",
											"                        \"type\": [\"number\", \"null\"]",
											"                    },",
											"                    \"fletsServiceCodeIn\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"serviceStatus\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipoeServiceStatus\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipoeOpenDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipoeCloseDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"moving\": {",
											"                        \"type\": \"boolean\",",
											"                    },",
											"                    \"staticIp\": {",
											"                        \"type\": \"array\",",
											"                    },",
											"                    \"router\": {",
											"                        \"type\": \"array\",",
											"                    },",
											"                    \"bundle\": {",
											"                        \"type\": \"array\",",
											"                    }",
											"                },",
											"                \"required\": [",
											"                    \"id\",",
											"                    \"orderId\",",
											"                    \"contractStartDate\",",
											"                    \"contractEndDate\",",
											"                    \"contractCode\",",
											"                    \"ispCode\",",
											"                    \"ngnCommonId\",",
											"                    \"nttArea\",",
											"                    \"ipv6Prefix\",",
											"                    \"ipv6PrefixLength\",",
											"                    \"fletsServiceCode\",",
											"                    \"ipv6PrefixIn\",",
											"                    \"ipv6PrefixLengthIn\",",
											"                    \"fletsServiceCodeIn\",",
											"                    \"serviceStatus\",",
											"                    \"ipoeServiceStatus\",",
											"                    \"ipoeOpenDate\",",
											"                    \"ipoeCloseDate\",",
											"                    \"moving\",",
											"                    \"staticIp\",",
											"                    \"router\",",
											"                    \"bundle\"",
											"                ]",
											"            },",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/ipoeContracts?ngnCommonId=CAF1320020020",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"ipoeContracts"
									],
									"query": [
										{
											"key": "ngnCommonId",
											"value": "CAF1320020020"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ipoeContracts List 200 OK(ispCode)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"required\": [",
											"        \"pages\",",
											"        \"total\",",
											"        \"data\"",
											"    ],",
											"    \"properties\": {",
											"        \"pages\": {",
											"            \"type\": \"object\",",
											"            \"required\": [",
											"                \"current\",",
											"                \"next\",",
											"                \"prev\",",
											"                \"last\"",
											"            ],",
											"            \"properties\": {",
											"                \"current\": {",
											"                    \"type\": [\"number\", \"null\"]",
											"                },",
											"                \"next\": {",
											"                    \"type\": [\"number\", \"null\"]",
											"                },",
											"                \"prev\": {",
											"                    \"type\": [\"string\", \"null\"]",
											"                },",
											"                \"last\": {",
											"                    \"type\": [\"number\", \"null\"]",
											"                }",
											"            }",
											"        },",
											"        \"total\": {",
											"            \"type\": \"number\",",
											"        },",
											"        \"data\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"properties\": {",
											"                    \"id\": {",
											"                        \"type\": \"number\",",
											"                    },",
											"                    \"orderId\": {",
											"                        \"type\": \"number\",",
											"                    },",
											"                    \"contractStartDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"contractEndDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"contractCode\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ispCode\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ngnCommonId\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"nttArea\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipv6Prefix\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixLength\": {",
											"                        \"type\": [\"number\", \"null\"]",
											"                    },",
											"                    \"fletsServiceCode\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixIn\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixLengthIn\": {",
											"                        \"type\": [\"number\", \"null\"]",
											"                    },",
											"                    \"fletsServiceCodeIn\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"serviceStatus\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipoeServiceStatus\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipoeOpenDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipoeCloseDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"moving\": {",
											"                        \"type\": \"boolean\",",
											"                    },",
											"                    \"staticIp\": {",
											"                        \"type\": \"array\",",
											"                    },",
											"                    \"router\": {",
											"                        \"type\": \"array\",",
											"                    },",
											"                    \"bundle\": {",
											"                        \"type\": \"array\",",
											"                    }",
											"                },",
											"                \"required\": [",
											"                    \"id\",",
											"                    \"orderId\",",
											"                    \"contractStartDate\",",
											"                    \"contractEndDate\",",
											"                    \"contractCode\",",
											"                    \"ispCode\",",
											"                    \"ngnCommonId\",",
											"                    \"nttArea\",",
											"                    \"ipv6Prefix\",",
											"                    \"ipv6PrefixLength\",",
											"                    \"fletsServiceCode\",",
											"                    \"ipv6PrefixIn\",",
											"                    \"ipv6PrefixLengthIn\",",
											"                    \"fletsServiceCodeIn\",",
											"                    \"serviceStatus\",",
											"                    \"ipoeServiceStatus\",",
											"                    \"ipoeOpenDate\",",
											"                    \"ipoeCloseDate\",",
											"                    \"moving\",",
											"                    \"staticIp\",",
											"                    \"router\",",
											"                    \"bundle\"",
											"                ]",
											"            },",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/ipoeContracts?ispCode=9000001101",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"ipoeContracts"
									],
									"query": [
										{
											"key": "ispCode",
											"value": "9000001101"
										},
										{
											"key": "maxsize",
											"value": "3",
											"disabled": true
										},
										{
											"key": "page",
											"value": "2",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ipoeContracts List 200 OK(paging)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"required\": [",
											"        \"pages\",",
											"        \"total\",",
											"        \"data\"",
											"    ],",
											"    \"properties\": {",
											"        \"pages\": {",
											"            \"type\": \"object\",",
											"            \"required\": [",
											"                \"current\",",
											"                \"next\",",
											"                \"prev\",",
											"                \"last\"",
											"            ],",
											"            \"properties\": {",
											"                \"current\": {",
											"                    \"type\": [\"number\", \"null\"]",
											"                },",
											"                \"next\": {",
											"                    \"type\": [\"number\", \"null\"]",
											"                },",
											"                \"prev\": {",
											"                    \"type\": [\"string\", \"null\"]",
											"                },",
											"                \"last\": {",
											"                    \"type\": [\"number\", \"null\"]",
											"                }",
											"            }",
											"        },",
											"        \"total\": {",
											"            \"type\": \"number\",",
											"        },",
											"        \"data\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"properties\": {",
											"                    \"id\": {",
											"                        \"type\": \"number\",",
											"                    },",
											"                    \"orderId\": {",
											"                        \"type\": \"number\",",
											"                    },",
											"                    \"contractStartDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"contractEndDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"contractCode\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ispCode\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ngnCommonId\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"nttArea\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipv6Prefix\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixLength\": {",
											"                        \"type\": [\"number\", \"null\"]",
											"                    },",
											"                    \"fletsServiceCode\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixIn\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixLengthIn\": {",
											"                        \"type\": [\"number\", \"null\"]",
											"                    },",
											"                    \"fletsServiceCodeIn\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"serviceStatus\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipoeServiceStatus\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipoeOpenDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipoeCloseDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"moving\": {",
											"                        \"type\": \"boolean\",",
											"                    },",
											"                    \"staticIp\": {",
											"                        \"type\": \"array\",",
											"                    },",
											"                    \"router\": {",
											"                        \"type\": \"array\",",
											"                    },",
											"                    \"bundle\": {",
											"                        \"type\": \"array\",",
											"                    }",
											"                },",
											"                \"required\": [",
											"                    \"id\",",
											"                    \"orderId\",",
											"                    \"contractStartDate\",",
											"                    \"contractEndDate\",",
											"                    \"contractCode\",",
											"                    \"ispCode\",",
											"                    \"ngnCommonId\",",
											"                    \"nttArea\",",
											"                    \"ipv6Prefix\",",
											"                    \"ipv6PrefixLength\",",
											"                    \"fletsServiceCode\",",
											"                    \"ipv6PrefixIn\",",
											"                    \"ipv6PrefixLengthIn\",",
											"                    \"fletsServiceCodeIn\",",
											"                    \"serviceStatus\",",
											"                    \"ipoeServiceStatus\",",
											"                    \"ipoeOpenDate\",",
											"                    \"ipoeCloseDate\",",
											"                    \"moving\",",
											"                    \"staticIp\",",
											"                    \"router\",",
											"                    \"bundle\"",
											"                ]",
											"            },",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/ipoeContracts?maxsize=10&page=1",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"ipoeContracts"
									],
									"query": [
										{
											"key": "ispCode",
											"value": "9000001101",
											"disabled": true
										},
										{
											"key": "maxsize",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ipoeContracts List 200 OK(ipoe service status)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"required\": [",
											"        \"pages\",",
											"        \"total\",",
											"        \"data\"",
											"    ],",
											"    \"properties\": {",
											"        \"pages\": {",
											"            \"type\": \"object\",",
											"            \"required\": [",
											"                \"current\",",
											"                \"next\",",
											"                \"prev\",",
											"                \"last\"",
											"            ],",
											"            \"properties\": {",
											"                \"current\": {",
											"                    \"type\": [\"number\", \"null\"]",
											"                },",
											"                \"next\": {",
											"                    \"type\": [\"number\", \"null\"]",
											"                },",
											"                \"prev\": {",
											"                    \"type\": [\"string\", \"null\"]",
											"                },",
											"                \"last\": {",
											"                    \"type\": [\"number\", \"null\"]",
											"                }",
											"            }",
											"        },",
											"        \"total\": {",
											"            \"type\": \"number\",",
											"        },",
											"        \"data\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"properties\": {",
											"                    \"id\": {",
											"                        \"type\": \"number\",",
											"                    },",
											"                    \"orderId\": {",
											"                        \"type\": \"number\",",
											"                    },",
											"                    \"contractStartDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"contractEndDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"contractCode\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ispCode\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ngnCommonId\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"nttArea\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipv6Prefix\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixLength\": {",
											"                        \"type\": [\"number\", \"null\"]",
											"                    },",
											"                    \"fletsServiceCode\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixIn\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixLengthIn\": {",
											"                        \"type\": [\"number\", \"null\"]",
											"                    },",
											"                    \"fletsServiceCodeIn\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"serviceStatus\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipoeServiceStatus\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipoeOpenDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipoeCloseDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"moving\": {",
											"                        \"type\": \"boolean\",",
											"                    },",
											"                    \"staticIp\": {",
											"                        \"type\": \"array\",",
											"                    },",
											"                    \"router\": {",
											"                        \"type\": \"array\",",
											"                    },",
											"                    \"bundle\": {",
											"                        \"type\": \"array\",",
											"                    }",
											"                },",
											"                \"required\": [",
											"                    \"id\",",
											"                    \"orderId\",",
											"                    \"contractStartDate\",",
											"                    \"contractEndDate\",",
											"                    \"contractCode\",",
											"                    \"ispCode\",",
											"                    \"ngnCommonId\",",
											"                    \"nttArea\",",
											"                    \"ipv6Prefix\",",
											"                    \"ipv6PrefixLength\",",
											"                    \"fletsServiceCode\",",
											"                    \"ipv6PrefixIn\",",
											"                    \"ipv6PrefixLengthIn\",",
											"                    \"fletsServiceCodeIn\",",
											"                    \"serviceStatus\",",
											"                    \"ipoeServiceStatus\",",
											"                    \"ipoeOpenDate\",",
											"                    \"ipoeCloseDate\",",
											"                    \"moving\",",
											"                    \"staticIp\",",
											"                    \"router\",",
											"                    \"bundle\"",
											"                ]",
											"            },",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/ipoeContracts?serviceStatus=provided&serviceStatus=unprovided",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"ipoeContracts"
									],
									"query": [
										{
											"key": "serviceStatus",
											"value": "provided"
										},
										{
											"key": "serviceStatus",
											"value": "unprovided"
										},
										{
											"key": "page",
											"value": "2",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ipoeContracts List 200 OK(router service status)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"required\": [",
											"        \"pages\",",
											"        \"total\",",
											"        \"data\"",
											"    ],",
											"    \"properties\": {",
											"        \"pages\": {",
											"            \"type\": \"object\",",
											"            \"required\": [",
											"                \"current\",",
											"                \"next\",",
											"                \"prev\",",
											"                \"last\"",
											"            ],",
											"            \"properties\": {",
											"                \"current\": {",
											"                    \"type\": [\"number\", \"null\"]",
											"                },",
											"                \"next\": {",
											"                    \"type\": [\"number\", \"null\"]",
											"                },",
											"                \"prev\": {",
											"                    \"type\": [\"string\", \"null\"]",
											"                },",
											"                \"last\": {",
											"                    \"type\": [\"number\", \"null\"]",
											"                }",
											"            }",
											"        },",
											"        \"total\": {",
											"            \"type\": \"number\",",
											"        },",
											"        \"data\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"properties\": {",
											"                    \"id\": {",
											"                        \"type\": \"number\",",
											"                    },",
											"                    \"orderId\": {",
											"                        \"type\": \"number\",",
											"                    },",
											"                    \"contractStartDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"contractEndDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"contractCode\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ispCode\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ngnCommonId\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"nttArea\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipv6Prefix\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixLength\": {",
											"                        \"type\": [\"number\", \"null\"]",
											"                    },",
											"                    \"fletsServiceCode\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixIn\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixLengthIn\": {",
											"                        \"type\": [\"number\", \"null\"]",
											"                    },",
											"                    \"fletsServiceCodeIn\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"serviceStatus\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipoeServiceStatus\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipoeOpenDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipoeCloseDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"moving\": {",
											"                        \"type\": \"boolean\",",
											"                    },",
											"                    \"staticIp\": {",
											"                        \"type\": \"array\",",
											"                    },",
											"                    \"router\": {",
											"                        \"type\": \"array\",",
											"                    },",
											"                    \"bundle\": {",
											"                        \"type\": \"array\",",
											"                    }",
											"                },",
											"                \"required\": [",
											"                    \"id\",",
											"                    \"orderId\",",
											"                    \"contractStartDate\",",
											"                    \"contractEndDate\",",
											"                    \"contractCode\",",
											"                    \"ispCode\",",
											"                    \"ngnCommonId\",",
											"                    \"nttArea\",",
											"                    \"ipv6Prefix\",",
											"                    \"ipv6PrefixLength\",",
											"                    \"fletsServiceCode\",",
											"                    \"ipv6PrefixIn\",",
											"                    \"ipv6PrefixLengthIn\",",
											"                    \"fletsServiceCodeIn\",",
											"                    \"serviceStatus\",",
											"                    \"ipoeServiceStatus\",",
											"                    \"ipoeOpenDate\",",
											"                    \"ipoeCloseDate\",",
											"                    \"moving\",",
											"                    \"staticIp\",",
											"                    \"router\",",
											"                    \"bundle\"",
											"                ]",
											"            },",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/ipoeContracts?routerServiceStatus=provided",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"ipoeContracts"
									],
									"query": [
										{
											"key": "routerServiceStatus",
											"value": "provided"
										},
										{
											"key": "serviceStatus",
											"value": "unprovided",
											"disabled": true
										},
										{
											"key": "page",
											"value": "2",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ipoeContracts List 200 OK(static ip service status)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"required\": [",
											"        \"pages\",",
											"        \"total\",",
											"        \"data\"",
											"    ],",
											"    \"properties\": {",
											"        \"pages\": {",
											"            \"type\": \"object\",",
											"            \"required\": [",
											"                \"current\",",
											"                \"next\",",
											"                \"prev\",",
											"                \"last\"",
											"            ],",
											"            \"properties\": {",
											"                \"current\": {",
											"                    \"type\": [\"number\", \"null\"]",
											"                },",
											"                \"next\": {",
											"                    \"type\": [\"number\", \"null\"]",
											"                },",
											"                \"prev\": {",
											"                    \"type\": [\"string\", \"null\"]",
											"                },",
											"                \"last\": {",
											"                    \"type\": [\"number\", \"null\"]",
											"                }",
											"            }",
											"        },",
											"        \"total\": {",
											"            \"type\": \"number\",",
											"        },",
											"        \"data\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"properties\": {",
											"                    \"id\": {",
											"                        \"type\": \"number\",",
											"                    },",
											"                    \"orderId\": {",
											"                        \"type\": \"number\",",
											"                    },",
											"                    \"contractStartDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"contractEndDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"contractCode\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ispCode\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ngnCommonId\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"nttArea\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipv6Prefix\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixLength\": {",
											"                        \"type\": [\"number\", \"null\"]",
											"                    },",
											"                    \"fletsServiceCode\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixIn\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixLengthIn\": {",
											"                        \"type\": [\"number\", \"null\"]",
											"                    },",
											"                    \"fletsServiceCodeIn\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"serviceStatus\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipoeServiceStatus\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipoeOpenDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipoeCloseDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"moving\": {",
											"                        \"type\": \"boolean\",",
											"                    },",
											"                    \"staticIp\": {",
											"                        \"type\": \"array\",",
											"                    },",
											"                    \"router\": {",
											"                        \"type\": \"array\",",
											"                    },",
											"                    \"bundle\": {",
											"                        \"type\": \"array\",",
											"                    }",
											"                },",
											"                \"required\": [",
											"                    \"id\",",
											"                    \"orderId\",",
											"                    \"contractStartDate\",",
											"                    \"contractEndDate\",",
											"                    \"contractCode\",",
											"                    \"ispCode\",",
											"                    \"ngnCommonId\",",
											"                    \"nttArea\",",
											"                    \"ipv6Prefix\",",
											"                    \"ipv6PrefixLength\",",
											"                    \"fletsServiceCode\",",
											"                    \"ipv6PrefixIn\",",
											"                    \"ipv6PrefixLengthIn\",",
											"                    \"fletsServiceCodeIn\",",
											"                    \"serviceStatus\",",
											"                    \"ipoeServiceStatus\",",
											"                    \"ipoeOpenDate\",",
											"                    \"ipoeCloseDate\",",
											"                    \"moving\",",
											"                    \"staticIp\",",
											"                    \"router\",",
											"                    \"bundle\"",
											"                ]",
											"            },",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/ipoeContracts?staticIpServiceStatus=provided&staticIpServiceStatus=reserved",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"ipoeContracts"
									],
									"query": [
										{
											"key": "staticIpServiceStatus",
											"value": "provided"
										},
										{
											"key": "staticIpServiceStatus",
											"value": "reserved"
										},
										{
											"key": "page",
											"value": "2",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ipoeContracts List 200 OK(applicationDate)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"required\": [",
											"        \"pages\",",
											"        \"total\",",
											"        \"data\"",
											"    ],",
											"    \"properties\": {",
											"        \"pages\": {",
											"            \"type\": \"object\",",
											"            \"required\": [",
											"                \"current\",",
											"                \"next\",",
											"                \"prev\",",
											"                \"last\"",
											"            ],",
											"            \"properties\": {",
											"                \"current\": {",
											"                    \"type\": [\"number\", \"null\"]",
											"                },",
											"                \"next\": {",
											"                    \"type\": [\"number\", \"null\"]",
											"                },",
											"                \"prev\": {",
											"                    \"type\": [\"string\", \"null\"]",
											"                },",
											"                \"last\": {",
											"                    \"type\": [\"number\", \"null\"]",
											"                }",
											"            }",
											"        },",
											"        \"total\": {",
											"            \"type\": \"number\",",
											"        },",
											"        \"data\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"properties\": {",
											"                    \"id\": {",
											"                        \"type\": \"number\",",
											"                    },",
											"                    \"orderId\": {",
											"                        \"type\": \"number\",",
											"                    },",
											"                    \"contractStartDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"contractEndDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"contractCode\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ispCode\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ngnCommonId\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"nttArea\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipv6Prefix\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixLength\": {",
											"                        \"type\": [\"number\", \"null\"]",
											"                    },",
											"                    \"fletsServiceCode\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixIn\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixLengthIn\": {",
											"                        \"type\": [\"number\", \"null\"]",
											"                    },",
											"                    \"fletsServiceCodeIn\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"serviceStatus\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipoeServiceStatus\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipoeOpenDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipoeCloseDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"moving\": {",
											"                        \"type\": \"boolean\",",
											"                    },",
											"                    \"staticIp\": {",
											"                        \"type\": \"array\",",
											"                    },",
											"                    \"router\": {",
											"                        \"type\": \"array\",",
											"                    },",
											"                    \"bundle\": {",
											"                        \"type\": \"array\",",
											"                    }",
											"                },",
											"                \"required\": [",
											"                    \"id\",",
											"                    \"orderId\",",
											"                    \"contractStartDate\",",
											"                    \"contractEndDate\",",
											"                    \"contractCode\",",
											"                    \"ispCode\",",
											"                    \"ngnCommonId\",",
											"                    \"nttArea\",",
											"                    \"ipv6Prefix\",",
											"                    \"ipv6PrefixLength\",",
											"                    \"fletsServiceCode\",",
											"                    \"ipv6PrefixIn\",",
											"                    \"ipv6PrefixLengthIn\",",
											"                    \"fletsServiceCodeIn\",",
											"                    \"serviceStatus\",",
											"                    \"ipoeServiceStatus\",",
											"                    \"ipoeOpenDate\",",
											"                    \"ipoeCloseDate\",",
											"                    \"moving\",",
											"                    \"staticIp\",",
											"                    \"router\",",
											"                    \"bundle\"",
											"                ]",
											"            },",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/ipoeContracts?applicationDateFrom=2022-09-20&applicationDateTo=2022-09-21",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"ipoeContracts"
									],
									"query": [
										{
											"key": "applicationDateFrom",
											"value": "2022-09-20"
										},
										{
											"key": "applicationDateTo",
											"value": "2022-09-21"
										},
										{
											"key": "page",
											"value": "2",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ipoeContracts List 200 OK(openDate)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"required\": [",
											"        \"pages\",",
											"        \"total\",",
											"        \"data\"",
											"    ],",
											"    \"properties\": {",
											"        \"pages\": {",
											"            \"type\": \"object\",",
											"            \"required\": [",
											"                \"current\",",
											"                \"next\",",
											"                \"prev\",",
											"                \"last\"",
											"            ],",
											"            \"properties\": {",
											"                \"current\": {",
											"                    \"type\": [\"number\", \"null\"]",
											"                },",
											"                \"next\": {",
											"                    \"type\": [\"number\", \"null\"]",
											"                },",
											"                \"prev\": {",
											"                    \"type\": [\"string\", \"null\"]",
											"                },",
											"                \"last\": {",
											"                    \"type\": [\"number\", \"null\"]",
											"                }",
											"            }",
											"        },",
											"        \"total\": {",
											"            \"type\": \"number\",",
											"        },",
											"        \"data\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"properties\": {",
											"                    \"id\": {",
											"                        \"type\": \"number\",",
											"                    },",
											"                    \"orderId\": {",
											"                        \"type\": \"number\",",
											"                    },",
											"                    \"contractStartDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"contractEndDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"contractCode\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ispCode\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ngnCommonId\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"nttArea\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipv6Prefix\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixLength\": {",
											"                        \"type\": [\"number\", \"null\"]",
											"                    },",
											"                    \"fletsServiceCode\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixIn\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixLengthIn\": {",
											"                        \"type\": [\"number\", \"null\"]",
											"                    },",
											"                    \"fletsServiceCodeIn\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"serviceStatus\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipoeServiceStatus\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipoeOpenDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipoeCloseDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"moving\": {",
											"                        \"type\": \"boolean\",",
											"                    },",
											"                    \"staticIp\": {",
											"                        \"type\": \"array\",",
											"                    },",
											"                    \"router\": {",
											"                        \"type\": \"array\",",
											"                    },",
											"                    \"bundle\": {",
											"                        \"type\": \"array\",",
											"                    }",
											"                },",
											"                \"required\": [",
											"                    \"id\",",
											"                    \"orderId\",",
											"                    \"contractStartDate\",",
											"                    \"contractEndDate\",",
											"                    \"contractCode\",",
											"                    \"ispCode\",",
											"                    \"ngnCommonId\",",
											"                    \"nttArea\",",
											"                    \"ipv6Prefix\",",
											"                    \"ipv6PrefixLength\",",
											"                    \"fletsServiceCode\",",
											"                    \"ipv6PrefixIn\",",
											"                    \"ipv6PrefixLengthIn\",",
											"                    \"fletsServiceCodeIn\",",
											"                    \"serviceStatus\",",
											"                    \"ipoeServiceStatus\",",
											"                    \"ipoeOpenDate\",",
											"                    \"ipoeCloseDate\",",
											"                    \"moving\",",
											"                    \"staticIp\",",
											"                    \"router\",",
											"                    \"bundle\"",
											"                ]",
											"            },",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/ipoeContracts?openDateFrom=2022-09-20&openDateTo=2022-09-21",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"ipoeContracts"
									],
									"query": [
										{
											"key": "openDateFrom",
											"value": "2022-09-20"
										},
										{
											"key": "openDateTo",
											"value": "2022-09-21"
										},
										{
											"key": "page",
											"value": "2",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "回線契約情報詳細取得",
					"item": [
						{
							"name": "ipoeContracts Detail 200 OK",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"properties\": {",
											"        \"data\": {",
											"            \"type\": \"array\",",
											"            \"items\": {",
											"                \"type\": \"object\",",
											"                \"properties\": {",
											"                    \"id\": {",
											"                        \"type\": \"number\",",
											"                    },",
											"                    \"orderId\": {",
											"                        \"type\": \"number\",",
											"                    },",
											"                    \"contractStartDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"contractEndDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"contractCode\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ispCode\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ngnCommonId\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"nttArea\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipv6Prefix\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixLength\": {",
											"                        \"type\": [\"number\", \"null\"]",
											"                    },",
											"                    \"fletsServiceCode\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixIn\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipv6PrefixLengthIn\": {",
											"                        \"type\": [\"number\", \"null\"]",
											"                    },",
											"                    \"fletsServiceCodeIn\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"serviceStatus\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipoeServiceStatus\": {",
											"                        \"type\": \"string\",",
											"                    },",
											"                    \"ipoeOpenDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"ipoeCloseDate\": {",
											"                        \"type\": [\"string\", \"null\"]",
											"                    },",
											"                    \"moving\": {",
											"                        \"type\": \"boolean\",",
											"                    },",
											"                    \"staticIp\": {",
											"                        \"type\": \"array\",",
											"                    },",
											"                    \"router\": {",
											"                        \"type\": \"array\",",
											"                    },",
											"                    \"bundle\": {",
											"                        \"type\": \"array\",",
											"                    }",
											"                },",
											"                \"required\": [",
											"                    \"id\",",
											"                    \"orderId\",",
											"                    \"contractStartDate\",",
											"                    \"contractEndDate\",",
											"                    \"contractCode\",",
											"                    \"ispCode\",",
											"                    \"ngnCommonId\",",
											"                    \"nttArea\",",
											"                    \"ipv6Prefix\",",
											"                    \"ipv6PrefixLength\",",
											"                    \"fletsServiceCode\",",
											"                    \"ipv6PrefixIn\",",
											"                    \"ipv6PrefixLengthIn\",",
											"                    \"fletsServiceCodeIn\",",
											"                    \"serviceStatus\",",
											"                    \"ipoeServiceStatus\",",
											"                    \"ipoeOpenDate\",",
											"                    \"ipoeCloseDate\",",
											"                    \"moving\",",
											"                    \"staticIp\",",
											"                    \"router\",",
											"                    \"bundle\"",
											"                ]",
											"            },",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/ipoeContracts/8",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"ipoeContracts",
										"8"
									],
									"query": [
										{
											"key": "openDateFrom",
											"value": "2022-09-20",
											"disabled": true
										},
										{
											"key": "openDateTo",
											"value": "2022-09-21",
											"disabled": true
										},
										{
											"key": "page",
											"value": "2",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "IPoEオーダ一覧取得",
					"item": [
						{
							"name": "ipoe order List 200 OK",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const schema = {",
											"    \"type\": \"array\",",
											"    \"items\": {",
											"        \"type\": \"object\",",
											"        \"properties\": {",
											"            \"ipoeOrderId\": {",
											"                \"type\": \"number\",",
											"            },",
											"            \"ipoeContractId\": {",
											"                \"type\": \"number\",",
											"            },",
											"            \"ispCode\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"ngnCommonId\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"groupCode\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"overwriteCheckFlag\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"sameTimeApplyFlag\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"openGuideAddress\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"ispName\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"ispTelNum\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"withFletsFlag\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"accessKey\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"ispApplDate\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"openDesireDate\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"openDesireTime\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"ispSeqNum\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"nttSendDatetime\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"receiptNo\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"resultCode\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"fletsServiceCode\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"nttArea\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"ipv6Prefix\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"ipv6PrefixLength\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"setEndDatetime\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"openDatetime\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"alStateCode\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"indoorWorkExpectDate\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"indoorWorkEndDate\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"moving\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"ispNote1\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"ispNote2\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"orderStatus\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            },",
											"            \"orderStatusDetail\": {",
											"                \"type\": [\"string\", \"null\"]",
											"            }",
											"        },",
											"        \"required\": [",
											"            \"ipoeOrderId\",",
											"            \"ipoeContractId\",",
											"            \"ispCode\",",
											"            \"ngnCommonId\",",
											"            \"groupCode\",",
											"            \"overwriteCheckFlag\",",
											"            \"sameTimeApplyFlag\",",
											"            \"openGuideAddress\",",
											"            \"ispName\",",
											"            \"ispTelNum\",",
											"            \"withFletsFlag\",",
											"            \"accessKey\",",
											"            \"ispApplDate\",",
											"            \"openDesireDate\",",
											"            \"openDesireTime\",",
											"            \"ispSeqNum\",",
											"            \"nttSendDatetime\",",
											"            \"receiptNo\",",
											"            \"resultCode\",",
											"            \"fletsServiceCode\",",
											"            \"nttArea\",",
											"            \"ipv6Prefix\",",
											"            \"ipv6PrefixLength\",",
											"            \"setEndDatetime\",",
											"            \"openDatetime\",",
											"            \"alStateCode\",",
											"            \"indoorWorkExpectDate\",",
											"            \"indoorWorkEndDate\",",
											"            \"moving\",",
											"            \"ispNote1\",",
											"            \"ispNote2\",",
											"            \"orderStatus\",",
											"            \"orderStatusDetail\"",
											"        ]",
											"    }",
											"}",
											"",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/ipoeContracts/8/orders",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"ipoeContracts",
										"8",
										"orders"
									],
									"query": [
										{
											"key": "openDateFrom",
											"value": "2022-09-20",
											"disabled": true
										},
										{
											"key": "openDateTo",
											"value": "2022-09-21",
											"disabled": true
										},
										{
											"key": "page",
											"value": "2",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "IPoEオーダ詳細取得",
					"item": [
						{
							"name": "ipoe order Detail 200 OK",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"properties\": {",
											"        \"ipoeOrderId\": {",
											"            \"type\": \"number\",",
											"        },",
											"        \"ipoeContractId\": {",
											"            \"type\": \"number\",",
											"        },",
											"        \"ispCode\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"ngnCommonId\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"groupCode\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"overwriteCheckFlag\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"sameTimeApplyFlag\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"openGuideAddress\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"ispName\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"ispTelNum\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"withFletsFlag\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"accessKey\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"ispApplDate\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"openDesireDate\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"openDesireTime\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"ispSeqNum\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"nttSendDatetime\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"receiptNo\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"resultCode\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"fletsServiceCode\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"nttArea\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"ipv6Prefix\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"ipv6PrefixLength\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"setEndDatetime\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"openDatetime\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"alStateCode\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"indoorWorkExpectDate\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"indoorWorkEndDate\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"moving\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"ispNote1\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"ispNote2\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"orderStatus\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        },",
											"        \"orderStatusDetail\": {",
											"            \"type\": [\"string\", \"null\"]",
											"        }",
											"    },",
											"    \"required\": [",
											"        \"ipoeOrderId\",",
											"        \"ipoeContractId\",",
											"        \"ispCode\",",
											"        \"ngnCommonId\",",
											"        \"groupCode\",",
											"        \"overwriteCheckFlag\",",
											"        \"sameTimeApplyFlag\",",
											"        \"openGuideAddress\",",
											"        \"ispName\",",
											"        \"ispTelNum\",",
											"        \"withFletsFlag\",",
											"        \"accessKey\",",
											"        \"ispApplDate\",",
											"        \"openDesireDate\",",
											"        \"openDesireTime\",",
											"        \"ispSeqNum\",",
											"        \"nttSendDatetime\",",
											"        \"receiptNo\",",
											"        \"resultCode\",",
											"        \"fletsServiceCode\",",
											"        \"nttArea\",",
											"        \"ipv6Prefix\",",
											"        \"ipv6PrefixLength\",",
											"        \"setEndDatetime\",",
											"        \"openDatetime\",",
											"        \"alStateCode\",",
											"        \"indoorWorkExpectDate\",",
											"        \"indoorWorkEndDate\",",
											"        \"moving\",",
											"        \"ispNote1\",",
											"        \"ispNote2\",",
											"        \"orderStatus\",",
											"        \"orderStatusDetail\"",
											"    ]",
											"}",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/ipoeContracts/8/orders/23",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"ipoeContracts",
										"8",
										"orders",
										"23"
									],
									"query": [
										{
											"key": "openDateFrom",
											"value": "2022-09-20",
											"disabled": true
										},
										{
											"key": "openDateTo",
											"value": "2022-09-21",
											"disabled": true
										},
										{
											"key": "page",
											"value": "2",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "オーダ登録（開通）",
					"item": [
						{
							"name": "IPoEリクエストバリデーション",
							"item": [
								{
									"name": "Ipoe Order request validation",
									"item": [
										{
											"name": "minimum required",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "caf番号不正",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF12345678901\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "caf番号不正",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF12345678901\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Ipoe Order request validate ispCode",
									"item": [
										{
											"name": "空白",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567891\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \" \"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "1文字多い",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567891\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"10001000091\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "1文字少ない",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567891\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"100010000\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "文字列入",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"IMFFFIMFFF\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "記号入り",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"10001000-9\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Ipoe Order request validate ispSeqNum",
									"item": [
										{
											"name": "50文字（仕様通り）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"ispSeqNum\": \"paeb5eiZaiGeiy6ooqueeth4waehaiS4ooPhahfoong4yeamoo\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "０文字",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1234567890\",\n  \"ispSeqNum\": \"\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "空白",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1234567890\",\n  \"ispSeqNum\": \" \"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "1文字多い",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1234567890\",\n  \"ispSeqNum\": \"paeb5eiZaiGeiy6ooqueeth4waehaiS4ooPhahfoong4yeamoo9\"\n}\n"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "記号入り",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1234567890\",\n  \"ispSeqNum\": \"paeb5eiZaiGeiy6ooqueeth4waeha-iS4ooPha\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Ipoe Order request validate ispApplDate",
									"item": [
										{
											"name": "日付（仕様通り）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"ispApplDate\": \"2022-01-02\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "０文字",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"ispApplDate\": \"\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "不正日付",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"ispApplDate\": \"2022-00-00\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "不正日付 yyyy/mm/dd",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"ispApplDate\": \"2022/01/01\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "不正日付 mm-dd-yyyy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"ispApplDate\": \"01-01-2022\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "不正日付 yyyy-m-d",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"ispApplDate\": \"2022-1-1\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "不正日付 JIS",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"ispApplDate\": \"2022-01ー01\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Ipoe Order request validate sameTimeApplFlag",
									"item": [
										{
											"name": "v6オプション申込あり（仕様通り）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"instration-address\",\n  \"ispName\": \"テストアイエスピー\",\n  \"ispTelNum\": \"090-6262-0983\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "v6オプション申込あり（openGuideAddressなし）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"ispName\": \"テストアイエスピー\",\n  \"ispTelNum\": \"090-6262-0983\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "v6オプション申込あり（ispNameなし）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"instration-address\",\n  \"ispTelNum\": \"090-6262-0983\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "v6オプション申込あり（ispTelNumなし）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"instration-address\",\n  \"ispName\": \"テストアイエスピー\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "v6オプション申込なし（仕様通り）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": false\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "v6オプション申込なし（ispName等設定）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"openGuideAddress\": \"instration-address\",\n  \"ispName\": \"テストアイエスピー\",\n  \"ispTelNum\": \"090-6262-0983\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "v6オプション申込フラグ 0文字",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": \"\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "v6オプション申込フラグ 空白文字",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": \" \"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "v6オプション申込フラグ bool値不正（string）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": \"mbpbo\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "v6オプション申込なし（sameTimeApplFlagが未設定）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Ipoe Order request validation ngnCommonId",
									"item": [
										{
											"name": "CAF",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "COP",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"COP18000011\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "空白",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \" \",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "0文字",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "一文字多い（CAF番号不正）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF12345678901\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "一文字少ない（CAF番号不正）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF123456789\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "一文字多い（COP番号不正）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"COP123456789\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "一文字少ない（COP番号不正）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"COP1234567\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "CAF/COP以外",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAP1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "CAF 順序別",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"1234567890CAF\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"9000001101\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "COP 順序別",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"12345678COP\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"9000001101\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Ipoe Order request validate openGuideAddress",
									"item": [
										{
											"name": "instration-address（仕様通り）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"instration-address\",\n  \"ispName\": \"テストアイエスピー\",\n  \"ispTelNum\": \"090-6262-0983\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "contractor-address（仕様通り）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"contractor-address\",\n  \"ispName\": \"テストアイエスピー\",\n  \"ispTelNum\": \"090-6262-0983\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "0文字",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1700000044\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"\",\n  \"ispName\": \"テストアイエスピー\",\n  \"ispTelNum\": \"090-6262-0983\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "空白文字",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1700000045\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \" \",\n  \"ispName\": \"テストアイエスピー\",\n  \"ispTelNum\": \"090-6262-0983\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "enum値不正（string）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1700000046\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"contractoraddress\",\n  \"ispName\": \"テストアイエスピー\",\n  \"ispTelNum\": \"090-6262-0983\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Ipoe Order request validate ispName",
									"item": [
										{
											"name": "仕様通り",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "ispNameTest",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"instration-address\",\n  \"ispName\": \"テストアイエスピー\",\n  \"ispTelNum\": \"090-6262-0983\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "仕様通り（漢字）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "ispNameTest",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"contractor-address\",\n  \"ispName\": \"株式会社\",\n  \"ispTelNum\": \"090-6262-0983\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "仕様通り（40文字）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "ispNameTest",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"contractor-address\",\n  \"ispName\": \"株式会社株式会社株式会社株式会社株式会社株式会社株式会社株式会社株式会社株式会\",\n  \"ispTelNum\": \"090-6262-0983\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "文字列超過(41文字）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "ispNameTest",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1700000050\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"contractor-address\",\n  \"ispName\": \"株式会社株式会社株式会社株式会社株式会社ス株式会社株式会社株式会社株式会社株式会あ\",\n  \"ispTelNum\": \"090-6262-0983\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "0文字",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "ispNameTest",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567834\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"contractor-address\",\n  \"ispName\": \"\",\n  \"ispTelNum\": \"090-6262-0983\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "全角空白文字",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "ispNameTest",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"contractor-address\",\n  \"ispName\": \"　\",\n  \"ispTelNum\": \"090-6262-0983\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "半角文字",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "ispNameTest",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567836\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"contractor-address\",\n  \"ispName\": \"ispname\",\n  \"ispTelNum\": \"090-6262-0983\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "全半角混合",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "ispNameTest",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567819\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"contractor-address\",\n  \"ispName\": \"アイエスピーname\",\n  \"ispTelNum\": \"090-6262-0983\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "全角英数字",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "ispNameTest",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"contractor-address\",\n  \"ispName\": \"ＡＢＣＤＥａｂｃｄｅｆ０１２３４５６７８\",\n  \"ispTelNum\": \"090-6262-0983\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "全角かなカナ",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "ispNameTest",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"contractor-address\",\n  \"ispName\": \"ぁあぃいぅうァアィイゥウェエォチヂッツ\",\n  \"ispTelNum\": \"090-6262-0983\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "全角記号パターン１",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "ispNameTest",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"contractor-address\",\n  \"ispName\": \"　、。，．\",\n  \"ispTelNum\": \"090-6262-0983\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "全角記号パターン2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "ispNameTest",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"contractor-address\",\n  \"ispName\": \"・：；？！\",\n  \"ispTelNum\": \"090-6262-0983\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "全角記号パターン3",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "ispNameTest",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"contractor-address\",\n  \"ispName\": \"゛゜\",\n  \"ispTelNum\": \"090-6262-0983\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "全角記号パターン4",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "ispNameTest",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"contractor-address\",\n  \"ispName\": \"´\",\n  \"ispTelNum\": \"090-6262-0983\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "全角記号パターン5",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "ispNameTest",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"contractor-address\",\n  \"ispName\": \"㈱\",\n  \"ispTelNum\": \"090-6262-0983\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Ipoe Order request validate ispName Extra",
									"item": [
										{
											"name": "Assert 「～」",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"ngnCommonId\": \"CAF1234567890\",\r\n  \"accessKey\": \"abcdefgj\",\r\n  \"ispCode\": \"1234567890\",\r\n  \"sameTimeApplyFlag\": true,\r\n  \"openGuideAddress\": \"contractor-address\",\r\n  \"ispName\": \"～\",\r\n  \"ispTelNum\": \"090-6262-0983\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Assert 「∥」",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"ngnCommonId\": \"CAF1234567890\",\r\n  \"accessKey\": \"abcdefgj\",\r\n  \"ispCode\": \"1234567890\",\r\n  \"sameTimeApplyFlag\": true,\r\n  \"openGuideAddress\": \"contractor-address\",\r\n  \"ispName\": \"∥\",\r\n  \"ispTelNum\": \"090-6262-0983\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Assert 「－」",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"ngnCommonId\": \"CAF1234567890\",\r\n  \"accessKey\": \"abcdefgj\",\r\n  \"ispCode\": \"1234567890\",\r\n  \"sameTimeApplyFlag\": true,\r\n  \"openGuideAddress\": \"contractor-address\",\r\n  \"ispName\": \"－\",\r\n  \"ispTelNum\": \"090-6262-0983\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Assert 「￠」",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"ngnCommonId\": \"CAF1234567890\",\r\n  \"accessKey\": \"abcdefgj\",\r\n  \"ispCode\": \"1234567890\",\r\n  \"sameTimeApplyFlag\": true,\r\n  \"openGuideAddress\": \"contractor-address\",\r\n  \"ispName\": \"￠\",\r\n  \"ispTelNum\": \"090-6262-0983\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Assert 「￡」",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"ngnCommonId\": \"CAF1234567890\",\r\n  \"accessKey\": \"abcdefgj\",\r\n  \"ispCode\": \"1234567890\",\r\n  \"sameTimeApplyFlag\": true,\r\n  \"openGuideAddress\": \"contractor-address\",\r\n  \"ispName\": \"￡\",\r\n  \"ispTelNum\": \"090-6262-0983\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Assert 「￢」",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"ngnCommonId\": \"CAF1234567890\",\r\n  \"accessKey\": \"abcdefgj\",\r\n  \"ispCode\": \"1234567890\",\r\n  \"sameTimeApplyFlag\": true,\r\n  \"openGuideAddress\": \"contractor-address\",\r\n  \"ispName\": \"￢\",\r\n  \"ispTelNum\": \"090-6262-0983\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Assert 「㍽」",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"ngnCommonId\": \"CAF1234567890\",\r\n  \"accessKey\": \"abcdefgj\",\r\n  \"ispCode\": \"1234567890\",\r\n  \"sameTimeApplyFlag\": true,\r\n  \"openGuideAddress\": \"contractor-address\",\r\n  \"ispName\": \"㍽\",\r\n  \"ispTelNum\": \"090-6262-0983\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Assert 「㈲」",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"ngnCommonId\": \"CAF1234567890\",\r\n  \"accessKey\": \"abcdefgj\",\r\n  \"ispCode\": \"1234567890\",\r\n  \"sameTimeApplyFlag\": true,\r\n  \"openGuideAddress\": \"contractor-address\",\r\n  \"ispName\": \"㈲\",\r\n  \"ispTelNum\": \"090-6262-0983\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Assert 「㍼」",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"ngnCommonId\": \"CAF1234567890\",\r\n  \"accessKey\": \"abcdefgj\",\r\n  \"ispCode\": \"1234567890\",\r\n  \"sameTimeApplyFlag\": true,\r\n  \"openGuideAddress\": \"contractor-address\",\r\n  \"ispName\": \"㍼\",\r\n  \"ispTelNum\": \"090-6262-0983\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Assert 「㈹」",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"ngnCommonId\": \"CAF1234567890\",\r\n  \"accessKey\": \"abcdefgj\",\r\n  \"ispCode\": \"1234567890\",\r\n  \"sameTimeApplyFlag\": true,\r\n  \"openGuideAddress\": \"contractor-address\",\r\n  \"ispName\": \"㈹\",\r\n  \"ispTelNum\": \"090-6262-0983\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Assert 「㍾」",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"ngnCommonId\": \"CAF1234567890\",\r\n  \"accessKey\": \"abcdefgj\",\r\n  \"ispCode\": \"1234567890\",\r\n  \"sameTimeApplyFlag\": true,\r\n  \"openGuideAddress\": \"contractor-address\",\r\n  \"ispName\": \"㍾\",\r\n  \"ispTelNum\": \"090-6262-0983\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Assert 「㋿」",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"ngnCommonId\": \"CAF1234567890\",\r\n  \"accessKey\": \"abcdefgj\",\r\n  \"ispCode\": \"1234567890\",\r\n  \"sameTimeApplyFlag\": true,\r\n  \"openGuideAddress\": \"contractor-address\",\r\n  \"ispName\": \"㋿\",\r\n  \"ispTelNum\": \"090-6262-0983\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Assert 「㍻」",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"ngnCommonId\": \"CAF1234567890\",\r\n  \"accessKey\": \"abcdefgj\",\r\n  \"ispCode\": \"1234567890\",\r\n  \"sameTimeApplyFlag\": true,\r\n  \"openGuideAddress\": \"contractor-address\",\r\n  \"ispName\": \"㍻\",\r\n  \"ispTelNum\": \"090-6262-0983\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Assert 「㊤」",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"ngnCommonId\": \"CAF1234567890\",\r\n  \"accessKey\": \"abcdefgj\",\r\n  \"ispCode\": \"1234567890\",\r\n  \"sameTimeApplyFlag\": true,\r\n  \"openGuideAddress\": \"contractor-address\",\r\n  \"ispName\": \"㊤\",\r\n  \"ispTelNum\": \"090-6262-0983\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Assert 「㊦」",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"ngnCommonId\": \"CAF1234567890\",\r\n  \"accessKey\": \"abcdefgj\",\r\n  \"ispCode\": \"1234567890\",\r\n  \"sameTimeApplyFlag\": true,\r\n  \"openGuideAddress\": \"contractor-address\",\r\n  \"ispName\": \"㊦\",\r\n  \"ispTelNum\": \"090-6262-0983\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Assert 「㊧」",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"ngnCommonId\": \"CAF1234567890\",\r\n  \"accessKey\": \"abcdefgj\",\r\n  \"ispCode\": \"1234567890\",\r\n  \"sameTimeApplyFlag\": true,\r\n  \"openGuideAddress\": \"contractor-address\",\r\n  \"ispName\": \"㊧\",\r\n  \"ispTelNum\": \"090-6262-0983\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Assert 「㊨」",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"ngnCommonId\": \"CAF1234567890\",\r\n  \"accessKey\": \"abcdefgj\",\r\n  \"ispCode\": \"1234567890\",\r\n  \"sameTimeApplyFlag\": true,\r\n  \"openGuideAddress\": \"contractor-address\",\r\n  \"ispName\": \"㊨\",\r\n  \"ispTelNum\": \"090-6262-0983\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Assert 「㊥」",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"ngnCommonId\": \"CAF1234567890\",\r\n  \"accessKey\": \"abcdefgj\",\r\n  \"ispCode\": \"1234567890\",\r\n  \"sameTimeApplyFlag\": true,\r\n  \"openGuideAddress\": \"contractor-address\",\r\n  \"ispName\": \"㊥\",\r\n  \"ispTelNum\": \"090-6262-0983\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Ipoe Order request validate ispTelNum",
									"item": [
										{
											"name": "仕様通り（固定電話 XXXX-XXX-XXX）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"instration-address\",\n  \"ispName\": \"テストアイエスピー\",\n  \"ispTelNum\": \"0901-6260-983\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "仕様通り（携帯電話 XXX-XXXX-XXXX）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });\r",
															"\r",
															"// timestampを使ったCAFで409を起こさないためのsleep処理\r",
															"const _sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r",
															"const aFunc = async function( ){\r",
															"    await sleep(100); \r",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"instration-address\",\n  \"ispName\": \"テストアイエスピー\",\n  \"ispTelNum\": \"090-6026-0983\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "仕様通り（携帯電話 XX-XXXX-XXXX）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"instration-address\",\n  \"ispName\": \"テストアイエスピー\",\n  \"ispTelNum\": \"09-6026-0983\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "仕様通り（ありえない番号）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"contractor-address\",\n  \"ispName\": \"株式会社\",\n  \"ispTelNum\": \"---0983000\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "文字数超過（14文字）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1234567890\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"contractor-address\",\n  \"ispName\": \"株式会社\",\n  \"ispTelNum\": \"9990-9990-0000\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "0文字",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1234567890\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"contractor-address\",\n  \"ispName\": \"株式会社\",\n  \"ispTelNum\": \"\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "空白文字",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1234567890\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"contractor-address\",\n  \"ispName\": \"株式会社\",\n  \"ispTelNum\": \" \"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "全角",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1234567890\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"contractor-address\",\n  \"ispName\": \"株式会社\",\n  \"ispTelNum\": \"０９０−００００−００００\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "Integer",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1234567890\",\n  \"sameTimeApplyFlag\": true,\n  \"openGuideAddress\": \"contractor-address\",\n  \"ispName\": \"株式会社\",\n  \"ispTelNum\": 123\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Ipoe Order request validate openDesireDate",
									"item": [
										{
											"name": "日付（仕様通り）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"openDesireDate\": \"2023-01-03\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "０文字",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1234567890\",\n  \"openDesireDate\": \"\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "不正日付",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1234567890\",\n  \"openDesireDate\": \"2022-00-00\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "不正日付 yyyy/mm/dd",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1234567890\",\n  \"openDesireDate\": \"2022/01/01\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "不正日付 mm-dd-yyyy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1234567890\",\n  \"openDesireDate\": \"01-01-2022\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "不正日付 yyyy-m-d",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1234567890\",\n  \"openDesireDate\": \"2022-1-1\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "不正日付 JIS",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1234567890\",\n  \"openDesireDate\": \"2022-01ー01\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Ipoe Order request validate openDesireTime",
									"item": [
										{
											"name": "仕様通り（00）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"openDesireDate\": \"2023-01-04\",\n  \"openDesireTime\": \"00\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "仕様通り（06）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });\r",
															"\r",
															"// timestampを使ったCAFで409を起こさないためのsleep処理\r",
															"const _sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r",
															"const aFunc = async function( ){\r",
															"    await sleep(100); \r",
															"}\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"openDesireDate\": \"2023-01-04\",\n  \"openDesireTime\": \"06\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "仕様通り（12）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"openDesireDate\": \"2023-01-04\",\n  \"openDesireTime\": \"12\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "仕様通り（18）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"openDesireDate\": \"2023-01-04\",\n  \"openDesireTime\": \"18\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "enum範囲外（15）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1234567890\",\n  \"openDesireDate\": \"2023-01-04\",\n  \"openDesireTime\": \"15\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "０文字",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1234567890\",\n  \"openDesireDate\": \"2023-01-04\",\n  \"openDesireTime\": \"\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "空白文字",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1234567890\",\n  \"openDesireDate\": \"2023-01-04\",\n  \"openDesireTime\": \" \"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "全角文字",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1234567890\",\n  \"openDesireDate\": \"2023-01-04\",\n  \"openDesireTime\": \"００\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Ipoe Order request validate ispNote1",
									"item": [
										{
											"name": "仕様通り",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"ispNote1\": \"123めも\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "仕様通り（記号）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"ispNote1\": \"②③④⑤⑥⑦⑧⑨⑩⑪⑫⑬⑭⑮⑯⑰⑱⑲⑳abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ012345678\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "仕様通り（半角カタカナ記号）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });\r",
															"\r",
															"// timestampを使ったCAFで409を起こさないためのsleep処理\r",
															"const _sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r",
															"const aFunc = async function( ){\r",
															"    await sleep(100); \r",
															"}\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"ispNote1\": \"｡｢｣､･ｦｧｨｩｪｫｬｭｮｯｰｱｲｳｴｵｶｷｸｹｺｻｼｽｾｿﾀﾁﾂﾃﾄﾅﾆﾇﾈﾉﾊﾋﾌﾍﾎﾏﾐﾑﾒﾓﾔﾕﾖﾗﾘﾙﾚﾛﾜﾝﾞﾟ\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "仕様通り（ローマ数字,ギリシャ文字 ISP要望）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"ispNote1\": \"ⅠⅡⅢⅣⅤⅥⅦⅧⅨⅩβαγ\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "文字数上限（全半角混合４００文字）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"ispNote1\": \"株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株\\n\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "文字数超過（全半各混合401文字）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1700000075\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"ispNote1\": \"株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式\\n\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "0文字",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1234567890\",\n  \"ispNote1\": \"\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "空文字",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1234567890\",\n  \"ispNote1\": \" \"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "改行コード",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1234567890\",\n  \"ispNote1\": \"ISP株式会社1\\nISP株式会社2\\n\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "不正特殊記号",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1234567890\",\n  \"ispNote1\": \"(apple mark)\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Ipoe Order request validate ispNote2",
									"item": [
										{
											"name": "仕様通り",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"ispNote2\": \"1234\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "仕様通り（記号）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"ispNote2\": \"②③④⑤⑥⑦⑧⑨⑩⑪⑫⑬⑭⑮⑯⑰⑱⑲⑳abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "仕様通り（半角カタカナ記号）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });\r",
															"\r",
															"// timestampを使ったCAFで409を起こさないためのsleep処理\r",
															"const _sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r",
															"const aFunc = async function( ){\r",
															"    await sleep(100); \r",
															"}\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"ispNote2\": \"｡｢｣､･ｦｧｨｩｪｫｬｭｮｯｰｱｲｳｴｵｶｷｸｹｺｻｼｽｾｿﾀﾁﾂﾃﾄﾅﾆﾇﾈﾉﾊﾋﾌﾍﾎﾏﾐﾑﾒﾓﾔﾕﾖﾗﾘﾙﾚﾛﾜﾝﾞﾟ\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "仕様通り（ローマ数字,ギリシャ文字 ISP要望）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"ispNote2\": \"ⅠⅡⅢⅣⅤⅥⅦⅧⅨⅩβαγ\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "文字数上限（全半角混合４００文字）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(201);\r",
															"});\r",
															"\r",
															"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする\r",
															"// const schema = {\r",
															"//     \"type\": \"object\",\r",
															"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],\r",
															"//     \"properties\": {\r",
															"//         \"ipoeContractId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"requestId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ipoeOrderId\": {\r",
															"//             \"type\": \"number\"\r",
															"//         },\r",
															"//         \"ispSeqNum\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",\r",
															"//         }, \r",
															"//         \"ispCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",\r",
															"//         },\r",
															"//         \"ngnCommonId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"\r",
															"//         },\r",
															"//         \"fletsServiceCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{1,3}$\",\r",
															"//         },\r",
															"//         \"responseCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",\r",
															"//         },\r",
															"//         \"receiptTime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"ipoeReceiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"ipoeResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nttSendDatetime\": {\r",
															"//             \"type\": \"string\"\r",
															"//         },\r",
															"//         \"receiptNo\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",\r",
															"//         },\r",
															"//         \"nayoseResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"nayoseReferId\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",\r",
															"//         },\r",
															"//         \"referProcResultCode\": {\r",
															"//             \"type\": \"string\",\r",
															"//             \"pattern\": \"^[0-9]{4}$\",\r",
															"//         },\r",
															"//         \"referResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 \"01\",\r",
															"//                 \"02\"\r",
															"//             ]\r",
															"//         },\r",
															"//         \"nameResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"areaResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"telMailResultCode\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1\r",
															"//             ]\r",
															"//         },\r",
															"//         \"orderStatus\": {\r",
															"//             \"enum\": [\r",
															"//                 \"accept\",\r",
															"//                 \"inprogress\",\r",
															"//                 \"finished\",\r",
															"//                 \"canceled\"\r",
															"//             ],\r",
															"//         },\r",
															"//         \"orderStatusDetail\": {\r",
															"//             \"enum\": [\r",
															"//                 0,\r",
															"//                 1,\r",
															"//                 2,\r",
															"//                 3,\r",
															"//                 4,\r",
															"//                 5,\r",
															"//                 6,\r",
															"//                 7,\r",
															"//                 8,\r",
															"//                 9,\r",
															"//                 10,\r",
															"//                 11\r",
															"//             ],\r",
															"//         }\r",
															"//     }\r",
															"// }\r",
															"\r",
															"// pm.test(\"Validate schema\", function () {\r",
															"//   pm.response.to.have.jsonSchema(schema)\r",
															"// });\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF{{$timestamp}}\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"ispNote2\": \"株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株\\n\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "文字数超過（全半各混合401文字）",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"ispNote2\": \"株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式会社ISP株式\\n\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "0文字",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"ispNote2\": \"\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "空文字",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"ispNote2\": \" \"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "改行コード",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"ispNote2\": \"ISP株式会社1\\nISP株式会社2\\n\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										},
										{
											"name": "不正特殊記号",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status Code is as expected \", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"const schema = {\r",
															"    \"type\": \"object\",\r",
															"    // \"required\":[\"errorMessage\", \"moreInfo\", \"responseCode\"],\r",
															"    \"properties\": {\r",
															"        \"errorMessage\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"moreInfo\": {\r",
															"            \"type\": \"string\"\r",
															"        },\r",
															"        \"responseCode\": {\r",
															"            \"type\": \"string\"\r",
															"        }\r",
															"    }\r",
															"}\r",
															"\r",
															"pm.test(\"Validate schema\", function () {\r",
															"  pm.response.to.have.jsonSchema(schema)\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "content-type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "x-xaas-auth-token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ngnCommonId\": \"CAF1234567890\",\n  \"accessKey\": \"abcdefgj\",\n  \"ispCode\": \"1200009981\",\n  \"ispNote2\": \"(apple mark)\"\n}"
												},
												"url": {
													"raw": "https://{{HOST}}/v1/ipoeContracts",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"v1",
														"ipoeContracts"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "IPoEオーダ 予約（開通希望日時指定）",
							"item": [
								{
									"name": "IPoEOrder 201 OK",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"  pm.response.to.have.status(201);",
													"});",
													"",
													"// NTTスタブに接続できない状態で、正しくスキーマのバリデーションができないので 以下はコメントアウトする",
													"// const schema = {",
													"//     \"type\": \"object\",",
													"//     \"required\":[\"ipoeContractId\",\"requestId\",\"ipoeOrderId\",\"ispSeqNum\",\"ispCode\",\"ngnCommonId\",\"fletsServiceCode\",\"responseCode\",\"receiptTime\",\"ipoeReceiptNo\",\"ipoeResultCode\",\"nttSendDatetime\",\"receiptNo\",\"nayoseResultCode\",\"nayoseReferId\",\"referProcResultCode\",\"referResultCode\",\"nameResultCode\",\"areaResultCode\",\"telMailResultCode\", \"orderStatus\", \"orderStatusDetail\"],",
													"//     \"properties\": {",
													"//         \"ipoeContractId\": {",
													"//             \"type\": \"number\"",
													"//         },",
													"//         \"requestId\": {",
													"//             \"type\": \"number\"",
													"//         },",
													"//         \"ipoeOrderId\": {",
													"//             \"type\": \"number\"",
													"//         },",
													"//         \"ispSeqNum\": {",
													"//             \"type\": \"string\",",
													"//             \"pattern\": \"^[a-zA-Z0-9]{1,50}$\",",
													"//         }, ",
													"//         \"ispCode\": {",
													"//             \"type\": \"string\",",
													"//             \"pattern\": \"^[a-zA-Z0-9]{10}$\",",
													"//         },",
													"//         \"ngnCommonId\": {",
													"//             \"type\": \"string\",",
													"//             \"pattern\": \"^CAF\\d{10}$|^COP\\d{8}$\"",
													"//         },",
													"//         \"fletsServiceCode\": {",
													"//             \"type\": \"string\",",
													"//             \"pattern\": \"^[0-9]{1,3}$\",",
													"//         },",
													"//         \"responseCode\": {",
													"//             \"type\": \"string\",",
													"//             \"pattern\": \"^[0-9a-zA-Z]{8}$\",",
													"//         },",
													"//         \"receiptTime\": {",
													"//             \"type\": \"string\"",
													"//         },",
													"//         \"ipoeReceiptNo\": {",
													"//             \"type\": \"string\",",
													"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",",
													"//         },",
													"//         \"ipoeResultCode\": {",
													"//             \"type\": \"string\",",
													"//             \"pattern\": \"^[0-9]{4}$\",",
													"//         },",
													"//         \"nttSendDatetime\": {",
													"//             \"type\": \"string\"",
													"//         },",
													"//         \"receiptNo\": {",
													"//             \"type\": \"string\",",
													"//             \"pattern\": \"^[a-zA-Z0-9]{1,20}$\",",
													"//         },",
													"//         \"nayoseResultCode\": {",
													"//             \"type\": \"string\",",
													"//             \"pattern\": \"^[0-9]{4}$\",",
													"//         },",
													"//         \"nayoseReferId\": {",
													"//             \"type\": \"string\",",
													"//             \"pattern\": \"^[a-zA-Z0-9]{19}$\",",
													"//         },",
													"//         \"referProcResultCode\": {",
													"//             \"type\": \"string\",",
													"//             \"pattern\": \"^[0-9]{4}$\",",
													"//         },",
													"//         \"referResultCode\": {",
													"//             \"enum\": [",
													"//                 \"01\",",
													"//                 \"02\"",
													"//             ]",
													"//         },",
													"//         \"nameResultCode\": {",
													"//             \"enum\": [",
													"//                 0,",
													"//                 1",
													"//             ]",
													"//         },",
													"//         \"areaResultCode\": {",
													"//             \"enum\": [",
													"//                 0,",
													"//                 1",
													"//             ]",
													"//         },",
													"//         \"telMailResultCode\": {",
													"//             \"enum\": [",
													"//                 0,",
													"//                 1",
													"//             ]",
													"//         },",
													"//         \"orderStatus\": {",
													"//             \"enum\": [",
													"//                 \"accept\",",
													"//                 \"inprogress\",",
													"//                 \"finished\",",
													"//                 \"canceled\"",
													"//             ],",
													"//         },",
													"//         \"orderStatusDetail\": {",
													"//             \"enum\": [",
													"//                 0,",
													"//                 1,",
													"//                 2,",
													"//                 3,",
													"//                 4,",
													"//                 5,",
													"//                 6,",
													"//                 7,",
													"//                 8,",
													"//                 9,",
													"//                 10,",
													"//                 11",
													"//             ],",
													"//         }",
													"//     }",
													"// }",
													"",
													"// pm.test(\"Validate schema\", function () {",
													"//   pm.response.to.have.jsonSchema(schema)",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Xaas-Auth-Token",
												"value": "{{X-Xaas-Auth-Token}}",
												"type": "text"
											},
											{
												"key": "X-Xaas-Illusion",
												"value": "PostIpoePriorInquiry_Normal_Success",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ngnCommonId\": \"CAF{{$timestamp}}\",\r\n    \"accessKey\": \"1234567f\",\r\n    \"ispCode\": \"1200009981\",\r\n    \"openDesireDate\": \"2023-01-30\",\r\n    \"openDesireTime\": \"06\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{HOST}}/v1/ipoeContracts",
											"protocol": "https",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"v1",
												"ipoeContracts"
											]
										}
									},
									"response": []
								},
								{
									"name": "IPoEOrder 422 Error when booking after 60 days",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 422\", function () {",
													"  pm.response.to.have.status(422);",
													"});",
													"",
													"const schema = {",
													"    \"type\": \"object\",",
													"    \"required\":[\"errorMessage\", \"responseCode\", ],",
													"    \"properties\": {",
													"        \"errorMessage\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"moreInfo\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"responseCode\": {",
													"            \"type\": \"string\"",
													"        }",
													"    }",
													"}",
													"",
													"pm.test(\"Validate schema\", function () {",
													"  pm.response.to.have.jsonSchema(schema)",
													"});",
													"",
													"pm.test(\"errorMessage\", function () {",
													"  var jsonData = pm.response.json();",
													"  pm.expect(jsonData.errorMessage).to.eql(\"開通希望日時が指定可能範囲外です\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Xaas-Auth-Token",
												"value": "{{X-Xaas-Auth-Token}}",
												"type": "text"
											},
											{
												"key": "X-Xaas-Illusion",
												"value": "PostIpoePriorInquiry_Normal_Success",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ngnCommonId\": \"CAF1700000010\",\r\n    \"accessKey\": \"1234567f\",\r\n    \"ispCode\":\"1200009981\",\r\n    \"openDesireDate\": \"2023-11-30\",\r\n    \"openDesireTime\": \"06\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{HOST}}/v1/ipoeContracts",
											"protocol": "https",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"v1",
												"ipoeContracts"
											]
										}
									},
									"response": []
								},
								{
									"name": "IPoEOrder 422 Error  When booking on scheduled maintenance date",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 422\", function () {",
													"  pm.response.to.have.status(422);",
													"});",
													"",
													"const schema = {",
													"    \"type\": \"object\",",
													"    \"required\":[\"errorMessage\", \"responseCode\", ],",
													"    \"properties\": {",
													"        \"errorMessage\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"moreInfo\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"responseCode\": {",
													"            \"type\": \"string\"",
													"        }",
													"    }",
													"}",
													"",
													"pm.test(\"Validate schema\", function () {",
													"  pm.response.to.have.jsonSchema(schema)",
													"});",
													"",
													"pm.test(\"errorMessage\", function () {",
													"  var jsonData = pm.response.json();",
													"  pm.expect(jsonData.errorMessage).to.eql(\"開通希望日時がオーダ受付の規制期間となります。\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Xaas-Auth-Token",
												"value": "{{X-Xaas-Auth-Token}}",
												"type": "text"
											},
											{
												"key": "X-Xaas-Illusion",
												"value": "PostIpoePriorInquiry_Normal_Success",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ngnCommonId\": \"CAF{{$timestamp}}\",\r\n    \"accessKey\": \"1234567f\",\r\n    \"ispCode\":\"1200009981\",\r\n    \"openDesireDate\": \"2023-01-02\",\r\n    \"openDesireTime\": \"06\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{HOST}}/v1/ipoeContracts",
											"protocol": "https",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"v1",
												"ipoeContracts"
											]
										}
									},
									"response": []
								},
								{
									"name": "IPoEOrder 422 Error with reservation time and without reservation date",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 422\", function () {",
													"  pm.response.to.have.status(422);",
													"});",
													"",
													"const schema = {",
													"    \"type\": \"object\",",
													"    \"required\":[\"errorMessage\", \"responseCode\", ],",
													"    \"properties\": {",
													"        \"errorMessage\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"moreInfo\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"responseCode\": {",
													"            \"type\": \"string\"",
													"        }",
													"    }",
													"}",
													"",
													"pm.test(\"Validate schema\", function () {",
													"  pm.response.to.have.jsonSchema(schema)",
													"});",
													"",
													"pm.test(\"errorMessage\", function () {",
													"  var jsonData = pm.response.json();",
													"  pm.expect(jsonData.errorMessage).to.eql(\"開通希望日が指定されていません。\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Xaas-Auth-Token",
												"value": "{{X-Xaas-Auth-Token}}",
												"type": "text"
											},
											{
												"key": "X-Xaas-Illusion",
												"value": "PostIpoePriorInquiry_Normal_Success",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ngnCommonId\": \"CAF1700000010\",\r\n    \"accessKey\": \"1234567f\",\r\n    \"ispCode\":\"1200009981\",\r\n    \"openDesireTime\": \"06\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{HOST}}/v1/ipoeContracts",
											"protocol": "https",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"v1",
												"ipoeContracts"
											]
										}
									},
									"response": []
								},
								{
									"name": "IPoEOrder 422 Error given past date",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 422\", function () {",
													"  pm.response.to.have.status(422);",
													"});",
													"",
													"const schema = {",
													"    \"type\": \"object\",",
													"    \"required\":[\"errorMessage\", \"responseCode\", ],",
													"    \"properties\": {",
													"        \"errorMessage\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"moreInfo\": {",
													"            \"type\": \"string\"",
													"        },",
													"        \"responseCode\": {",
													"            \"type\": \"string\"",
													"        }",
													"    }",
													"}",
													"",
													"pm.test(\"Validate schema\", function () {",
													"  pm.response.to.have.jsonSchema(schema)",
													"});",
													"",
													"pm.test(\"errorMessage\", function () {",
													"  var jsonData = pm.response.json();",
													"  pm.expect(jsonData.errorMessage).to.eql(\"開通希望日時が指定可能範囲外です\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Xaas-Auth-Token",
												"value": "{{X-Xaas-Auth-Token}}",
												"type": "text"
											},
											{
												"key": "X-Xaas-Illusion",
												"value": "PostIpoePriorInquiry_Normal_Success",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ngnCommonId\": \"CAF1700000010\",\r\n    \"accessKey\": \"1234567f\",\r\n    \"ispCode\":\"1200009981\",\r\n    \"openDesireDate\": \"2022-11-01\",\r\n    \"openDesireTime\": \"06\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{HOST}}/v1/ipoeContracts",
											"protocol": "https",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"v1",
												"ipoeContracts"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "NTTレスポンスフォーマットバリデーション",
							"item": [
								{
									"name": "IPoEオーダAPI（5101）",
									"item": [
										{
											"name": "Success_normal",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"  pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-Xaas-Auth-Token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "PostIpoePriorInquiry_Normal_Success ",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"sameTimeApplyFlag\": true,\r\n    \"ispName\": \"テスト\",\r\n    \"ispTelNum\": \"080-1234-5678\",\r\n    \"openGuideAddress\": \"0\",\r\n    \"accessKey\": \"test1234\",\r\n    \"ngnCommonId\": \"CAF1234567890\",\r\n    \"orderClsCode\": 0,\r\n    \"remark1\": \"\", \r\n    \"remark2\": \"\",\r\n    \"settingClientIspCode\":\"2003\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/internal/v1/ipoe/priorInquiry/east",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"internal",
														"v1",
														"ipoe",
														"priorInquiry",
														"east"
													]
												}
											},
											"response": []
										},
										{
											"name": "BadRequest_normal",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 500\", function () {",
															"  pm.response.to.have.status(500);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-Xaas-Auth-Token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "PostIpoePriorInquiry_Bad_Request",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"sameTimeApplyFlag\": true,\r\n    \"ispName\": \"テスト\",\r\n    \"ispTelNum\": \"080-1234-5678\",\r\n    \"openGuideAddress\": \"0\",\r\n    \"accessKey\": \"test1234\",\r\n    \"ngnCommonId\": \"CAF1234567890\",\r\n    \"orderClsCode\": 0,\r\n    \"remark1\": \"\", \r\n    \"remark2\": \"\",\r\n    \"settingClientIspCode\":\"2003\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/internal/v1/ipoe/priorInquiry/east",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"internal",
														"v1",
														"ipoe",
														"priorInquiry",
														"east"
													]
												}
											},
											"response": []
										},
										{
											"name": "Success_abnormal_with_id",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"  pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-Xaas-Auth-Token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "PostIpoePriorInquiry_Abnormal_With_Id_Success ",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"sameTimeApplyFlag\": true,\r\n    \"ispName\": \"テスト\",\r\n    \"ispTelNum\": \"080-1234-5678\",\r\n    \"openGuideAddress\": \"0\",\r\n    \"accessKey\": \"test1234\",\r\n    \"ngnCommonId\": \"CAF1234567890\",\r\n    \"orderClsCode\": 0,\r\n    \"remark1\": \"\", \r\n    \"remark2\": \"\",\r\n    \"settingClientIspCode\":\"2003\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/internal/v1/ipoe/priorInquiry/east",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"internal",
														"v1",
														"ipoe",
														"priorInquiry",
														"east"
													]
												}
											},
											"response": []
										},
										{
											"name": "BadRequest_abnormal_with_id",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 500\", function () {",
															"  pm.response.to.have.status(500);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-Xaas-Auth-Token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "PostIpoePriorInquiry_Abnormal_With_Id_Bad_Request ",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"sameTimeApplyFlag\": true,\r\n    \"ispName\": \"テスト\",\r\n    \"ispTelNum\": \"080-1234-5678\",\r\n    \"openGuideAddress\": \"0\",\r\n    \"accessKey\": \"test1234\",\r\n    \"ngnCommonId\": \"CAF1234567890\",\r\n    \"orderClsCode\": 0,\r\n    \"remark1\": \"\", \r\n    \"remark2\": \"\",\r\n    \"settingClientIspCode\":\"2003\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/internal/v1/ipoe/priorInquiry/east",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"internal",
														"v1",
														"ipoe",
														"priorInquiry",
														"east"
													]
												}
											},
											"response": []
										},
										{
											"name": "Success_abnormal_without_id",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"  pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-Xaas-Auth-Token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "PostIpoePriorInquiry_Abnormal_Without_Id_Success ",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"sameTimeApplyFlag\": true,\r\n    \"ispName\": \"テスト\",\r\n    \"ispTelNum\": \"080-1234-5678\",\r\n    \"openGuideAddress\": \"0\",\r\n    \"accessKey\": \"test1234\",\r\n    \"ngnCommonId\": \"CAF1234567890\",\r\n    \"orderClsCode\": 0,\r\n    \"remark1\": \"\", \r\n    \"remark2\": \"\",\r\n    \"settingClientIspCode\":\"2003\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/internal/v1/ipoe/priorInquiry/east",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"internal",
														"v1",
														"ipoe",
														"priorInquiry",
														"east"
													]
												}
											},
											"response": []
										},
										{
											"name": "BadRequest_abnormal_without_id",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 500\", function () {",
															"  pm.response.to.have.status(500);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-Xaas-Auth-Token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "PostIpoePriorInquiry_Abnormal_Without_Id_Bad_Request ",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"sameTimeApplyFlag\": true,\r\n    \"ispName\": \"テスト\",\r\n    \"ispTelNum\": \"080-1234-5678\",\r\n    \"openGuideAddress\": \"0\",\r\n    \"accessKey\": \"test1234\",\r\n    \"ngnCommonId\": \"CAF1234567890\",\r\n    \"orderClsCode\": 0,\r\n    \"remark1\": \"\", \r\n    \"remark2\": \"\",\r\n    \"settingClientIspCode\":\"2003\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/internal/v1/ipoe/priorInquiry/east",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"internal",
														"v1",
														"ipoe",
														"priorInquiry",
														"east"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "IPoEオーダAPI（5102）",
									"item": [
										{
											"name": "5102_Nomal_OK",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-Xaas-Auth-Token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "Nomal_OK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"sameTimeApplyFlag\": true,\r\n    \"ispName\": \"株式会社テスト\",\r\n    \"ispTelNum\": \"080-0987-1234\",\r\n    \"openGuideAddress\": \"0\",\r\n    \"accessKey\": \"test1234\",\r\n    \"ngnCommonId\": \"CAF1234567890\",\r\n    \"orderClsCode\": 0,\r\n    \"remark1\": \"\", \r\n    \"remark2\": \"\",\r\n    \"settingClientIspCode\":\"2003\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/internal/v1/ipoe/regist/east",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"internal",
														"v1",
														"ipoe",
														"regist",
														"east"
													]
												}
											},
											"response": []
										},
										{
											"name": "5102_Nomal_NG",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 500\", function () {\r",
															"  pm.response.to.have.status(500);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-Xaas-Auth-Token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "Nomal_NG",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"sameTimeApplyFlag\": true,\r\n    \"ispName\": \"株式会社テスト\",\r\n    \"ispTelNum\": \"080-0987-1234\",\r\n    \"openGuideAddress\": \"0\",\r\n    \"accessKey\": \"test1234\",\r\n    \"ngnCommonId\": \"CAF1234567890\",\r\n    \"orderClsCode\": 0,\r\n    \"remark1\": \"\", \r\n    \"remark2\": \"\",\r\n    \"settingClientIspCode\":\"2003\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/internal/v1/ipoe/regist/east",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"internal",
														"v1",
														"ipoe",
														"regist",
														"east"
													]
												}
											},
											"response": []
										},
										{
											"name": "5102_Abnomal_1_OK",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-Xaas-Auth-Token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "Abnomal_1_OK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"sameTimeApplyFlag\": true,\r\n    \"ispName\": \"株式会社テスト\",\r\n    \"ispTelNum\": \"080-0987-1234\",\r\n    \"openGuideAddress\": \"0\",\r\n    \"accessKey\": \"test1234\",\r\n    \"ngnCommonId\": \"CAF1234567890\",\r\n    \"orderClsCode\": 0,\r\n    \"remark1\": \"\", \r\n    \"remark2\": \"\",\r\n    \"settingClientIspCode\":\"2003\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/internal/v1/ipoe/regist/east",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"internal",
														"v1",
														"ipoe",
														"regist",
														"east"
													]
												}
											},
											"response": []
										},
										{
											"name": "5102_Abnomal_1_NG",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 500\", function () {\r",
															"  pm.response.to.have.status(500);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-Xaas-Auth-Token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "Abnomal_1_NG",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"sameTimeApplyFlag\": true,\r\n    \"ispName\": \"株式会社テスト\",\r\n    \"ispTelNum\": \"080-0987-1234\",\r\n    \"openGuideAddress\": \"0\",\r\n    \"accessKey\": \"test1234\",\r\n    \"ngnCommonId\": \"CAF1234567890\",\r\n    \"orderClsCode\": 0,\r\n    \"remark1\": \"\", \r\n    \"remark2\": \"\",\r\n    \"settingClientIspCode\":\"2003\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/internal/v1/ipoe/regist/east",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"internal",
														"v1",
														"ipoe",
														"regist",
														"east"
													]
												}
											},
											"response": []
										},
										{
											"name": "5102_Abnomal_2_OK",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-Xaas-Auth-Token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "Abnomal_2_OK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"sameTimeApplyFlag\": true,\r\n    \"ispName\": \"株式会社テスト\",\r\n    \"ispTelNum\": \"080-0987-1234\",\r\n    \"openGuideAddress\": \"0\",\r\n    \"accessKey\": \"test1234\",\r\n    \"ngnCommonId\": \"CAF1234567890\",\r\n    \"orderClsCode\": 0,\r\n    \"remark1\": \"\", \r\n    \"remark2\": \"\",\r\n    \"settingClientIspCode\":\"2003\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/internal/v1/ipoe/regist/east",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"internal",
														"v1",
														"ipoe",
														"regist",
														"east"
													]
												}
											},
											"response": []
										},
										{
											"name": "5102_Abnomal_2_NG",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 500\", function () {\r",
															"  pm.response.to.have.status(500);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-Xaas-Auth-Token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "Abnomal_2_NG",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"sameTimeApplyFlag\": true,\r\n    \"ispName\": \"株式会社テスト\",\r\n    \"ispTelNum\": \"080-0987-1234\",\r\n    \"openGuideAddress\": \"0\",\r\n    \"accessKey\": \"test1234\",\r\n    \"ngnCommonId\": \"CAF1234567890\",\r\n    \"orderClsCode\": 0,\r\n    \"remark1\": \"\", \r\n    \"remark2\": \"\",\r\n    \"settingClientIspCode\":\"2003\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/internal/v1/ipoe/regist/east",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"internal",
														"v1",
														"ipoe",
														"regist",
														"east"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "名寄せオーダAPI（6101）",
									"item": [
										{
											"name": "Success_normal",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"  pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-Xaas-Auth-Token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "NayosePriorInquiry_Normal_Success",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"applicantMail\": \"test@mfeed.ad.jp\",\r\n    \"applicantNameKana\": \"ﾃｽﾄ\",\r\n    \"applicantNameKanji\": \"テスト\",\r\n    \"applicantTelephone\": \"090-1234-5678\",\r\n    \"contUserMail\": \"test@mfeed.ad.jp\",\r\n    \"contUserPostcode\": \"111-1111\",\r\n    \"contUserTelephone\": \"090-1234-5678\",\r\n    \"contUsernameKana\": \"ﾃｽﾄ\", \r\n    \"contUsernameKanji\": \"テスト\",\r\n    \"instPlacePostcode\":\"111-1111\",\r\n    \"instPlaceTelephone\": \"090-1234-5678\",\r\n    \"ngnCommonId\": \"CAF1234567890\",\r\n    \"searchLoginId\": \"ntt\",\r\n    \"searchLoginPw\": \"pass\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/internal/v1/nayose/priorInquiry/west",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"internal",
														"v1",
														"nayose",
														"priorInquiry",
														"west"
													]
												}
											},
											"response": []
										},
										{
											"name": "BadRequest_normal",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 500\", function () {",
															"  pm.response.to.have.status(500);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-Xaas-Auth-Token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "NayosePriorInquiry_Bad_Request",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"applicantMail\": \"test@mfeed.ad.jp\",\r\n    \"applicantNameKana\": \"ﾃｽﾄ\",\r\n    \"applicantNameKanji\": \"テスト\",\r\n    \"applicantTelephone\": \"090-1234-5678\",\r\n    \"contUserMail\": \"test@mfeed.ad.jp\",\r\n    \"contUserPostcode\": \"111-1111\",\r\n    \"contUserTelephone\": \"090-1234-5678\",\r\n    \"contUsernameKana\": \"ﾃｽﾄ\", \r\n    \"contUsernameKanji\": \"テスト\",\r\n    \"instPlacePostcode\":\"111-1111\",\r\n    \"instPlaceTelephone\": \"090-1234-5678\",\r\n    \"ngnCommonId\": \"CAF1234567890\",\r\n    \"searchLoginId\": \"ntt\",\r\n    \"searchLoginPw\": \"pass\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/internal/v1/nayose/priorInquiry/west",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"internal",
														"v1",
														"nayose",
														"priorInquiry",
														"west"
													]
												}
											},
											"response": []
										},
										{
											"name": "Success_abnormal_with_id",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"  pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-Xaas-Auth-Token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "NayosePriorInquiry_Abnormal_With_Id_Success",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"applicantMail\": \"test@mfeed.ad.jp\",\r\n    \"applicantNameKana\": \"ﾃｽﾄ\",\r\n    \"applicantNameKanji\": \"テスト\",\r\n    \"applicantTelephone\": \"090-1234-5678\",\r\n    \"contUserMail\": \"test@mfeed.ad.jp\",\r\n    \"contUserPostcode\": \"111-1111\",\r\n    \"contUserTelephone\": \"090-1234-5678\",\r\n    \"contUsernameKana\": \"ﾃｽﾄ\", \r\n    \"contUsernameKanji\": \"テスト\",\r\n    \"instPlacePostcode\":\"111-1111\",\r\n    \"instPlaceTelephone\": \"090-1234-5678\",\r\n    \"ngnCommonId\": \"CAF1234567890\",\r\n    \"searchLoginId\": \"ntt\",\r\n    \"searchLoginPw\": \"pass\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/internal/v1/nayose/priorInquiry/west",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"internal",
														"v1",
														"nayose",
														"priorInquiry",
														"west"
													]
												}
											},
											"response": []
										},
										{
											"name": "BadRequest_abnormal_with_id",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 500\", function () {",
															"  pm.response.to.have.status(500);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-Xaas-Auth-Token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "NayosePriorInquiry_Abnormal_With_Id_Bad_Request",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"applicantMail\": \"test@mfeed.ad.jp\",\r\n    \"applicantNameKana\": \"ﾃｽﾄ\",\r\n    \"applicantNameKanji\": \"テスト\",\r\n    \"applicantTelephone\": \"090-1234-5678\",\r\n    \"contUserMail\": \"test@mfeed.ad.jp\",\r\n    \"contUserPostcode\": \"111-1111\",\r\n    \"contUserTelephone\": \"090-1234-5678\",\r\n    \"contUsernameKana\": \"ﾃｽﾄ\", \r\n    \"contUsernameKanji\": \"テスト\",\r\n    \"instPlacePostcode\":\"111-1111\",\r\n    \"instPlaceTelephone\": \"090-1234-5678\",\r\n    \"ngnCommonId\": \"CAF1234567890\",\r\n    \"searchLoginId\": \"ntt\",\r\n    \"searchLoginPw\": \"pass\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/internal/v1/nayose/priorInquiry/west",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"internal",
														"v1",
														"nayose",
														"priorInquiry",
														"west"
													]
												}
											},
											"response": []
										},
										{
											"name": "Success_abnormal_without_id",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"  pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-Xaas-Auth-Token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "NayosePriorInquiry_Abnormal_Without_Id_Success",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"applicantMail\": \"test@mfeed.ad.jp\",\r\n    \"applicantNameKana\": \"ﾃｽﾄ\",\r\n    \"applicantNameKanji\": \"テスト\",\r\n    \"applicantTelephone\": \"090-1234-5678\",\r\n    \"contUserMail\": \"test@mfeed.ad.jp\",\r\n    \"contUserPostcode\": \"111-1111\",\r\n    \"contUserTelephone\": \"090-1234-5678\",\r\n    \"contUsernameKana\": \"ﾃｽﾄ\", \r\n    \"contUsernameKanji\": \"テスト\",\r\n    \"instPlacePostcode\":\"111-1111\",\r\n    \"instPlaceTelephone\": \"090-1234-5678\",\r\n    \"ngnCommonId\": \"CAF1234567890\",\r\n    \"searchLoginId\": \"ntt\",\r\n    \"searchLoginPw\": \"pass\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/internal/v1/nayose/priorInquiry/west",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"internal",
														"v1",
														"nayose",
														"priorInquiry",
														"west"
													]
												}
											},
											"response": []
										},
										{
											"name": "BadRequest_abnormal_without_id",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 500\", function () {",
															"  pm.response.to.have.status(500);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-Xaas-Auth-Token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "NayosePriorInquiry_Abnormal_Without_Id_Bad_Request",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"applicantMail\": \"test@mfeed.ad.jp\",\r\n    \"applicantNameKana\": \"ﾃｽﾄ\",\r\n    \"applicantNameKanji\": \"テスト\",\r\n    \"applicantTelephone\": \"090-1234-5678\",\r\n    \"contUserMail\": \"test@mfeed.ad.jp\",\r\n    \"contUserPostcode\": \"111-1111\",\r\n    \"contUserTelephone\": \"090-1234-5678\",\r\n    \"contUsernameKana\": \"ﾃｽﾄ\", \r\n    \"contUsernameKanji\": \"テスト\",\r\n    \"instPlacePostcode\":\"111-1111\",\r\n    \"instPlaceTelephone\": \"090-1234-5678\",\r\n    \"ngnCommonId\": \"CAF1234567890\",\r\n    \"searchLoginId\": \"ntt\",\r\n    \"searchLoginPw\": \"pass\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/internal/v1/nayose/priorInquiry/west",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"internal",
														"v1",
														"nayose",
														"priorInquiry",
														"west"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "名寄せオーダAPI（6102）",
									"item": [
										{
											"name": "6102_Nomal_OK",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-Xaas-Auth-Token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "Nomal_OK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"sameTimeApplyFlag\": true,\r\n    \"ispName\": \"株式会社テスト\",\r\n    \"ispTelNum\": \"080-0987-1234\",\r\n    \"openGuideAddress\": \"0\",\r\n    \"accessKey\": \"test1234\",\r\n    \"ngnCommonId\": \"CAF1234567890\",\r\n    \"orderClsCode\": 0,\r\n    \"remark1\": \"\", \r\n    \"remark2\": \"\",\r\n    \"settingClientIspCode\":\"2003\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/internal/v1/ipoe/regist/east",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"internal",
														"v1",
														"ipoe",
														"regist",
														"east"
													]
												}
											},
											"response": []
										},
										{
											"name": "6102_Nomal_NG",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 500\", function () {\r",
															"  pm.response.to.have.status(500);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-Xaas-Auth-Token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "Nomal_NG",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"sameTimeApplyFlag\": true,\r\n    \"ispName\": \"株式会社テスト\",\r\n    \"ispTelNum\": \"080-0987-1234\",\r\n    \"openGuideAddress\": \"0\",\r\n    \"accessKey\": \"test1234\",\r\n    \"ngnCommonId\": \"CAF1234567890\",\r\n    \"orderClsCode\": 0,\r\n    \"remark1\": \"\", \r\n    \"remark2\": \"\",\r\n    \"settingClientIspCode\":\"2003\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/internal/v1/ipoe/regist/east",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"internal",
														"v1",
														"ipoe",
														"regist",
														"east"
													]
												}
											},
											"response": []
										},
										{
											"name": "6102_Abnomal_1_OK",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-Xaas-Auth-Token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "Abnomal_1_OK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"sameTimeApplyFlag\": true,\r\n    \"ispName\": \"株式会社テスト\",\r\n    \"ispTelNum\": \"080-0987-1234\",\r\n    \"openGuideAddress\": \"0\",\r\n    \"accessKey\": \"test1234\",\r\n    \"ngnCommonId\": \"CAF1234567890\",\r\n    \"orderClsCode\": 0,\r\n    \"remark1\": \"\", \r\n    \"remark2\": \"\",\r\n    \"settingClientIspCode\":\"2003\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/internal/v1/ipoe/regist/east",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"internal",
														"v1",
														"ipoe",
														"regist",
														"east"
													]
												}
											},
											"response": []
										},
										{
											"name": "6102_Abnomal_1_NG",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 500\", function () {\r",
															"  pm.response.to.have.status(500);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-Xaas-Auth-Token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "Abnomal_1_NG",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"sameTimeApplyFlag\": true,\r\n    \"ispName\": \"株式会社テスト\",\r\n    \"ispTelNum\": \"080-0987-1234\",\r\n    \"openGuideAddress\": \"0\",\r\n    \"accessKey\": \"test1234\",\r\n    \"ngnCommonId\": \"CAF1234567890\",\r\n    \"orderClsCode\": 0,\r\n    \"remark1\": \"\", \r\n    \"remark2\": \"\",\r\n    \"settingClientIspCode\":\"2003\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/internal/v1/ipoe/regist/east",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"internal",
														"v1",
														"ipoe",
														"regist",
														"east"
													]
												}
											},
											"response": []
										},
										{
											"name": "6102_Abnomal_2_OK",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"  pm.response.to.have.status(200);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-Xaas-Auth-Token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "Abnomal_2_OK",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"sameTimeApplyFlag\": true,\r\n    \"ispName\": \"株式会社テスト\",\r\n    \"ispTelNum\": \"080-0987-1234\",\r\n    \"openGuideAddress\": \"0\",\r\n    \"accessKey\": \"test1234\",\r\n    \"ngnCommonId\": \"CAF1234567890\",\r\n    \"orderClsCode\": 0,\r\n    \"remark1\": \"\", \r\n    \"remark2\": \"\",\r\n    \"settingClientIspCode\":\"2003\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/internal/v1/ipoe/regist/east",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"internal",
														"v1",
														"ipoe",
														"regist",
														"east"
													]
												}
											},
											"response": []
										},
										{
											"name": "6102_Abnomal_2_NG",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 500\", function () {\r",
															"  pm.response.to.have.status(500);\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "X-Xaas-Auth-Token",
														"value": "{{X-Xaas-Auth-Token}}",
														"type": "text"
													},
													{
														"key": "X-Xaas-Illusion",
														"value": "Abnomal_2_NG",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"sameTimeApplyFlag\": true,\r\n    \"ispName\": \"株式会社テスト\",\r\n    \"ispTelNum\": \"080-0987-1234\",\r\n    \"openGuideAddress\": \"0\",\r\n    \"accessKey\": \"test1234\",\r\n    \"ngnCommonId\": \"CAF1234567890\",\r\n    \"orderClsCode\": 0,\r\n    \"remark1\": \"\", \r\n    \"remark2\": \"\",\r\n    \"settingClientIspCode\":\"2003\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{HOST}}/internal/v1/ipoe/regist/east",
													"protocol": "https",
													"host": [
														"{{HOST}}"
													],
													"path": [
														"internal",
														"v1",
														"ipoe",
														"regist",
														"east"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "事前照会",
					"item": [
						{
							"name": "IPoEエラー",
							"item": [
								{
									"name": "1201_AL状態エラー",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is as expected \", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"// 応答時間に対するテスト\r",
													"pm.test(\"Response time is less than 400ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
													"});\r",
													"\r",
													"pm.test(\"errorMessage\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.errorMessage).to.eql(\"Forbidden\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Xaas-Auth-Token",
												"value": "{{X-Xaas-Auth-Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ngnCommonId\": \"CAF9999990121\",\n    \"accessKey\": \"1234567f\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{HOST}}/v1/ipoeContracts/priorInquiries",
											"protocol": "https",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"v1",
												"ipoeContracts",
												"priorInquiries"
											]
										}
									},
									"response": []
								},
								{
									"name": "1202_提供外品目エラー",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is as expected \", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"// 応答時間に対するテスト\r",
													"pm.test(\"Response time is less than 400ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
													"});\r",
													"\r",
													"pm.test(\"errorMessage\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.errorMessage).to.eql(\"Forbidden\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Xaas-Auth-Token",
												"value": "{{X-Xaas-Auth-Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ngnCommonId\": \"CAF1320020122\",\n    \"accessKey\": \"1234567f\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{HOST}}/v1/ipoeContracts/priorInquiries",
											"protocol": "https",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"v1",
												"ipoeContracts",
												"priorInquiries"
											]
										}
									},
									"response": []
								},
								{
									"name": "1301_v6未契約エラー",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is as expected \", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"// 応答時間に対するテスト\r",
													"pm.test(\"Response time is less than 400ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
													"});\r",
													"\r",
													"pm.test(\"errorMessage\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.errorMessage).to.eql(\"Forbidden\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Xaas-Auth-Token",
												"value": "{{X-Xaas-Auth-Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ngnCommonId\": \"CAF1700030131\",\n    \"accessKey\": \"1234567f\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{HOST}}/v1/ipoeContracts/priorInquiries",
											"protocol": "https",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"v1",
												"ipoeContracts",
												"priorInquiries"
											]
										}
									},
									"response": []
								},
								{
									"name": "1302_v6処理中エラー",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is as expected \", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"// 応答時間に対するテスト\r",
													"pm.test(\"Response time is less than 400ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
													"});\r",
													"\r",
													"pm.test(\"errorMessage\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.errorMessage).to.eql(\"Forbidden\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Xaas-Auth-Token",
												"value": "{{X-Xaas-Auth-Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ngnCommonId\": \"CAF1700030132\",\n    \"accessKey\": \"1234567f\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{HOST}}/v1/ipoeContracts/priorInquiries",
											"protocol": "https",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"v1",
												"ipoeContracts",
												"priorInquiries"
											]
										}
									},
									"response": []
								},
								{
									"name": "1401_相関オーダエラー",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is as expected \", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"// 応答時間に対するテスト\r",
													"pm.test(\"Response time is less than 400ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
													"});\r",
													"\r",
													"pm.test(\"errorMessage\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.errorMessage).to.eql(\"Forbidden\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Xaas-Auth-Token",
												"value": "{{X-Xaas-Auth-Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ngnCommonId\": \"CAF1320020141\",\n    \"accessKey\": \"1234567f\",\n    \"ispCode\":\"1200009981\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{HOST}}/v1/ipoeContracts/priorInquiries",
											"protocol": "https",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"v1",
												"ipoeContracts",
												"priorInquiries"
											]
										}
									},
									"response": []
								},
								{
									"name": "1402_オーダ順序矛盾（開通では起きないはず）",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is as expected \", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"// 応答時間に対するテスト\r",
													"pm.test(\"Response time is less than 400ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
													"});\r",
													"\r",
													"pm.test(\"errorMessage\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.errorMessage).to.eql(\"Forbidden\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Xaas-Auth-Token",
												"value": "{{X-Xaas-Auth-Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ngnCommonId\": \"CAF1320020142\",\n    \"accessKey\": \"1234567f\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{HOST}}/v1/ipoeContracts/priorInquiries",
											"protocol": "https",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"v1",
												"ipoeContracts",
												"priorInquiries"
											]
										}
									},
									"response": []
								},
								{
									"name": "1403_ALチェック不一致エラー",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is as expected \", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"// 応答時間に対するテスト\r",
													"pm.test(\"Response time is less than 400ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
													"});\r",
													"\r",
													"pm.test(\"errorMessage\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.errorMessage).to.eql(\"Forbidden\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Xaas-Auth-Token",
												"value": "{{X-Xaas-Auth-Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ngnCommonId\": \"CAF1320020143\",\n    \"accessKey\": \"1234567g\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{HOST}}/v1/ipoeContracts/priorInquiries",
											"protocol": "https",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"v1",
												"ipoeContracts",
												"priorInquiries"
											]
										}
									},
									"response": []
								},
								{
									"name": "9001_フォーマットエラー",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is as expected \", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"// 応答時間に対するテスト\r",
													"pm.test(\"Response time is less than 400ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
													"});\r",
													"\r",
													"pm.test(\"errorMessage\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.errorMessage).to.eql(\"Forbidden\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Xaas-Auth-Token",
												"value": "{{X-Xaas-Auth-Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ngnCommonId\": \"CAF1320020901\",\n    \"accessKey\": \"1234567f\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{HOST}}/v1/ipoeContracts/priorInquiries",
											"protocol": "https",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"v1",
												"ipoeContracts",
												"priorInquiries"
											]
										}
									},
									"response": []
								},
								{
									"name": "9002_認証エラー",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is as expected \", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"// 応答時間に対するテスト\r",
													"pm.test(\"Response time is less than 400ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
													"});\r",
													"\r",
													"pm.test(\"errorMessage\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.errorMessage).to.eql(\"Forbidden\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Xaas-Auth-Token",
												"value": "{{X-Xaas-Auth-Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ngnCommonId\": \"CAF1320020902\",\n    \"accessKey\": \"1234567f\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{HOST}}/v1/ipoeContracts/priorInquiries",
											"protocol": "https",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"v1",
												"ipoeContracts",
												"priorInquiries"
											]
										}
									},
									"response": []
								},
								{
									"name": "9990_システムメンテナンス",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is as expected \", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"// 応答時間に対するテスト\r",
													"pm.test(\"Response time is less than 400ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
													"});\r",
													"\r",
													"pm.test(\"errorMessage\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.errorMessage).to.eql(\"Forbidden\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Xaas-Auth-Token",
												"value": "{{X-Xaas-Auth-Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ngnCommonId\": \"CAF1320020990\",\n    \"accessKey\": \"1234567f\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{HOST}}/v1/ipoeContracts/priorInquiries",
											"protocol": "https",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"v1",
												"ipoeContracts",
												"priorInquiries"
											]
										}
									},
									"response": []
								},
								{
									"name": "9999_システム異常",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is as expected \", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"// 応答時間に対するテスト\r",
													"pm.test(\"Response time is less than 400ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
													"});\r",
													"\r",
													"pm.test(\"errorMessage\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.errorMessage).to.eql(\"Forbidden\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Xaas-Auth-Token",
												"value": "{{X-Xaas-Auth-Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ngnCommonId\": \"CAF1320020999\",\n    \"accessKey\": \"1234567f\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{HOST}}/v1/ipoeContracts/priorInquiries",
											"protocol": "https",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"v1",
												"ipoeContracts",
												"priorInquiries"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "正常系",
							"item": [
								{
									"name": "200 0000_事前照会（東）",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"const schema = {\r",
													"    \"type\": \"object\",\r",
													"    \"required\": [\r",
													"        \"ispSeqNum\",\r",
													"        \"ngnCommonId\",\r",
													"        \"fletsServiceCode\",\r",
													"        \"responseCode\",\r",
													"        \"receiptTime\",\r",
													"        \"ipoeReceiptNo\",\r",
													"        \"ipoeResultCode\"\r",
													"    ],\r",
													"    \"properties\" : {\r",
													"        \"ispSeqNum\": {\r",
													"            \"type\": \"string\",\r",
													"            \"maxLength\": 50,\r",
													"            \"minLength\": 0,\r",
													"            \"type\": \"string\"\r",
													"        },\r",
													"        \"ngnCommonId\": {\r",
													"            \"type\": [\"string\", \"null\"],\r",
													"            \"maxLength\": 13,\r",
													"            \"minLength\": 11,\r",
													"            \"pattern\": \"CAF\\\\d{10}|COP\\\\d{8}\"\r",
													"        },\r",
													"        \"fletsServiceCode\": {\r",
													"            \"type\": \"string\",\r",
													"            \"maxLength\": 3,\r",
													"            \"minLength\": 3,\r",
													"            \"pattern\": \"\\\\d{3}\",\r",
													"            \"type\": \"string\"\r",
													"        },\r",
													"        \"responseCode\": {\r",
													"            \"type\": \"string\",\r",
													"            \"maxLength\": 8,\r",
													"            \"minLength\": 8,\r",
													"            \"pattern\": \"\\\\d{8}\",\r",
													"            \"type\": \"string\"\r",
													"        },\r",
													"        \"receiptTime\": {\r",
													"            \"type\": \"string\",\r",
													"            \"maxLength\": 14,\r",
													"            \"minLength\": 14,\r",
													"            \"pattern\": \"\\\\d{14}\",\r",
													"            \"type\": \"string\"\r",
													"        },\r",
													"        //TODO:fix schema\r",
													"        \"ipoeReceiptNo\": {\r",
													"            \"minLength\": 1,\r",
													"            \"manLength\": 20,\r",
													"            \"type\": \"string\"\r",
													"        },\r",
													"        \"ipoeResultCode\": {\r",
													"            \"type\": \"string\",\r",
													"            \"pattern\": \"\\\\d{4}\",\r",
													"            \"type\": \"string\"\r",
													"        }\r",
													"    }\r",
													"}\r",
													"\r",
													"\r",
													"pm.test(\"Validate schema\", function () {\r",
													"  pm.response.to.have.jsonSchema(schema)\r",
													"});\r",
													"\r",
													"pm.test(\"Status Code is as expected \", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"\r",
													"// 応答時間に対するテスト\r",
													"pm.test(\"Response time is less than 300ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Xaas-Auth-Token",
												"value": "{{X-Xaas-Auth-Token}}",
												"type": "text"
											},
											{
												"key": "X-Xaas-Auth-Token",
												"value": "{{ADMIN-TOKEN}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ngnCommonId\": \"CAF1700030000\",\n    \"accessKey\": \"1234567f\",\n    \"ispSeqNum\": \"hogeHoge230455\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{HOST}}/v1/ipoeContracts/priorInquiries",
											"protocol": "https",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"v1",
												"ipoeContracts",
												"priorInquiries"
											]
										}
									},
									"response": []
								},
								{
									"name": "200 0000_事前照会（西）",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"const schema = {\r",
													"    \"type\": \"object\",\r",
													"    \"required\": [\r",
													"        \"ispSeqNum\",\r",
													"        \"ngnCommonId\",\r",
													"        \"fletsServiceCode\",\r",
													"        \"responseCode\",\r",
													"        \"receiptTime\",\r",
													"        \"ipoeReceiptNo\",\r",
													"        \"ipoeResultCode\"\r",
													"    ],\r",
													"    \"properties\" : {\r",
													"        \"ispSeqNum\": {\r",
													"            \"type\": \"string\",\r",
													"            \"maxLength\": 50,\r",
													"            \"minLength\": 0,\r",
													"            \"type\": \"string\"\r",
													"        },\r",
													"        \"ngnCommonId\": {\r",
													"            \"type\": [\"string\", \"null\"],\r",
													"            \"maxLength\": 13,\r",
													"            \"minLength\": 11,\r",
													"            \"pattern\": \"CAF\\\\d{10}|COP\\\\d{8}\"\r",
													"        },\r",
													"        \"fletsServiceCode\": {\r",
													"            \"type\": \"string\",\r",
													"            \"maxLength\": 3,\r",
													"            \"minLength\": 3,\r",
													"            \"pattern\": \"\\\\d{3}\",\r",
													"            \"type\": \"string\"\r",
													"        },\r",
													"        \"responseCode\": {\r",
													"            \"type\": \"string\",\r",
													"            \"maxLength\": 8,\r",
													"            \"minLength\": 8,\r",
													"            \"pattern\": \"\\\\d{8}\",\r",
													"            \"type\": \"string\"\r",
													"        },\r",
													"        \"receiptTime\": {\r",
													"            \"type\": \"string\",\r",
													"            \"maxLength\": 14,\r",
													"            \"minLength\": 14,\r",
													"            \"pattern\": \"\\\\d{14}\",\r",
													"            \"type\": \"string\"\r",
													"        },\r",
													"        //TODO:fix schema\r",
													"        \"ipoeReceiptNo\": {\r",
													"            \"minLength\": 1,\r",
													"            \"manLength\": 20,\r",
													"            \"type\": \"string\"\r",
													"        },\r",
													"        \"ipoeResultCode\": {\r",
													"            \"type\": \"string\",\r",
													"            \"pattern\": \"\\\\d{4}\",\r",
													"            \"type\": \"string\"\r",
													"        }\r",
													"    }\r",
													"}\r",
													"\r",
													"\r",
													"pm.test(\"Validate schema\", function () {\r",
													"  pm.response.to.have.jsonSchema(schema)\r",
													"});\r",
													"\r",
													"pm.test(\"Status Code is as expected \", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"\r",
													"// 応答時間に対するテスト\r",
													"pm.test(\"Response time is less than 300ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Xaas-Auth-Token",
												"value": "{{X-Xaas-Auth-Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ngnCommonId\": \"CAF5700030000\",\n    \"accessKey\": \"1234567f\",\n    \"ispSeqNum\":\"1200009981\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{HOST}}/v1/ipoeContracts/priorInquiries",
											"protocol": "https",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"v1",
												"ipoeContracts",
												"priorInquiries"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "フォーマットエラー",
							"item": [
								{
									"name": "400 同時申し込み関連項目入力漏れ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is as expected \", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"// 応答時間に対するテスト\r",
													"pm.test(\"Response time is less than 300ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
													"});\r",
													"\r",
													"pm.test(\"errorMessage\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Xaas-Auth-Token",
												"value": "{{X-Xaas-Auth-Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ngnCommonId\": \"CAF5700030101\",\n    \"accessKey\": \"1234567f\",\n    \"ispCode\":\"1200009981\",\n    \"sameTimeApplyFlag\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{HOST}}/v1/ipoeContracts/priorInquiries",
											"protocol": "https",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"v1",
												"ipoeContracts",
												"priorInquiries"
											]
										}
									},
									"response": []
								},
								{
									"name": "400 アクセスキー入力漏れ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is as expected \", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"// 応答時間に対するテスト\r",
													"pm.test(\"Response time is less than 300ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
													"});\r",
													"\r",
													"pm.test(\"errorMessage\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Xaas-Auth-Token",
												"value": "{{X-Xaas-Auth-Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ngnCommonId\": \"CAF1700030101\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{HOST}}/v1/ipoeContracts/priorInquiries",
											"protocol": "https",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"v1",
												"ipoeContracts",
												"priorInquiries"
											]
										}
									},
									"response": []
								},
								{
									"name": "400 CAFフォーマットエラー",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is as expected \", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"// 応答時間に対するテスト\r",
													"pm.test(\"Response time is less than 300ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
													"});\r",
													"\r",
													"pm.test(\"errorMessage\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Xaas-Auth-Token",
												"value": "{{X-Xaas-Auth-Token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"ngnCommonId\": \"CAFO700030101\",\n    \"accessKey\": \"1234567f\",\n    \"ispSeqNum\":\"NTT1200009981\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{HOST}}/v1/ipoeContracts/priorInquiries",
											"protocol": "https",
											"host": [
												"{{HOST}}"
											],
											"path": [
												"v1",
												"ipoeContracts",
												"priorInquiries"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Notices",
			"item": [
				{
					"name": "v1",
					"item": [
						{
							"name": "Notices 200 OK (no params)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const schema = {",
											"    \"type\": \"array\",",
											"    \"items\": {",
											"        \"type\": \"object\",",
											"        \"required\":[\"title\", \"notice_id\",\"open_date\",\"close_date\"],",
											"        \"properties\": {",
											"            \"title\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"notice_id\": {",
											"                \"maxinum\": 65535,",
											"                \"mininum\": 1,",
											"                \"pattern\": \"[0-9]{1,5}\",",
											"                \"type\": \"integer\"",
											"            },",
											"            \"open_date\": {",
											"                \"type\": \"string\",",
											"                \"format\": \"date\"",
											"            },",
											"            \"close_date\": {",
											"                \"type\": \"string\",",
											"                \"format\": \"date\"",
											"            }",
											"        }",
											"    }",
											"}",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/notices",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"notices"
									],
									"query": [
										{
											"key": "isp_code",
											"value": "hogehoge01",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Notices 200 OK (All params)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const schema = {",
											"    \"type\": \"array\",",
											"    \"items\": {",
											"        \"type\": \"object\",",
											"        \"required\":[\"title\", \"notice_id\",\"open_date\",\"close_date\"],",
											"        \"properties\": {",
											"            \"title\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"notice_id\": {",
											"                \"maxinum\": 65535,",
											"                \"mininum\": 0,",
											"                \"type\": \"integer\"",
											"            },",
											"            \"open_date\": {",
											"                \"type\": \"string\",",
											"                \"format\": \"date\"",
											"            },",
											"            \"close_date\": {",
											"                \"type\": \"string\",",
											"                \"format\": \"date\"",
											"            }",
											"        }",
											"    }",
											"}",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/notices?from_date=2019-10-10&to_date=2022-10-11&limit=2&offset=0",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"notices"
									],
									"query": [
										{
											"key": "from_date",
											"value": "2019-10-10"
										},
										{
											"key": "to_date",
											"value": "2022-10-11"
										},
										{
											"key": "limit",
											"value": "2"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Notices 200 OK (no items)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Empty Body\", function () {",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.length).to.eql(0);",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/notices?from_date=2030-10-10&to_date=2031-10-11&limit=2&offset=0",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"notices"
									],
									"query": [
										{
											"key": "from_date",
											"value": "2030-10-10"
										},
										{
											"key": "to_date",
											"value": "2031-10-11"
										},
										{
											"key": "limit",
											"value": "2"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Notices 400 Error Invalid Param(from_date)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"required\":[\"errorMessage\", \"moreInfo\"],",
											"    \"properties\": {",
											"        \"errorMessage\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"moreInfo\": {",
											"            \"type\": \"string\"",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"",
											"pm.test(\"errorMessage\", function () {",
											"  var jsonData = pm.response.json();",
											"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");",
											"});",
											"",
											"pm.test(\"Status code is 400\", function () {",
											"  pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/notices?from_date=0001-01-111",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"notices"
									],
									"query": [
										{
											"key": "from_date",
											"value": "0001-01-111"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Notices 400 Error Invalid Param(to_date)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"  pm.response.to.have.status(400);",
											"});",
											"",
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"required\":[\"errorMessage\", \"moreInfo\"],",
											"    \"properties\": {",
											"        \"errorMessage\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"moreInfo\": {",
											"            \"type\": \"string\"",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"",
											"pm.test(\"errorMessage\", function () {",
											"  var jsonData = pm.response.json();",
											"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/notices?to_date=20211010",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"notices"
									],
									"query": [
										{
											"key": "to_date",
											"value": "20211010"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Notices 400 Error Invalid Param(limit)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"  pm.response.to.have.status(400);",
											"});",
											"",
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"required\":[\"errorMessage\", \"moreInfo\"],",
											"    \"properties\": {",
											"        \"errorMessage\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"moreInfo\": {",
											"            \"type\": \"string\"",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"",
											"pm.test(\"errorMessage\", function () {",
											"  var jsonData = pm.response.json();",
											"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/notices?limit=s",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"notices"
									],
									"query": [
										{
											"key": "limit",
											"value": "s"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Notices 400 Error Invalid Param(offset)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"  pm.response.to.have.status(400);",
											"});",
											"",
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"required\":[\"errorMessage\", \"moreInfo\"],",
											"    \"properties\": {",
											"        \"errorMessage\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"moreInfo\": {",
											"            \"type\": \"string\"",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"",
											"pm.test(\"errorMessage\", function () {",
											"  var jsonData = pm.response.json();",
											"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/notices?offset=s",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"notices"
									],
									"query": [
										{
											"key": "offset",
											"value": "s"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Notices 400 Error Invalid Param(offset,limit) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"  pm.response.to.have.status(400);",
											"});",
											"",
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"required\":[\"errorMessage\", \"moreInfo\"],",
											"    \"properties\": {",
											"        \"errorMessage\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"moreInfo\": {",
											"            \"type\": \"string\"",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"",
											"pm.test(\"errorMessage\", function () {",
											"  var jsonData = pm.response.json();",
											"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/notices?offset=hoge",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"notices"
									],
									"query": [
										{
											"key": "offset",
											"value": "hoge"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Notices 500 Error DB Connection Error with Faker",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"  pm.response.to.have.status(500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									},
									{
										"key": "X-Xaas-Illusion",
										"value": "DBConnectionError",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/notices",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"notices"
									]
								}
							},
							"response": []
						},
						{
							"name": "Notices 500 Error Unexpected Error with Faker",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"  pm.response.to.have.status(500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									},
									{
										"key": "X-Xaas-Illusion",
										"value": "SODBUnexpectedError",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/notices",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"notices"
									]
								}
							},
							"response": []
						},
						{
							"name": "Notice Detail 200 OK",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"required\":[\"title\", \"notice_id\",\"open_date\",\"close_date\", \"contents\"],",
											"    \"properties\": {",
											"            \"title\": {",
											"                \"type\": \"string\"",
											"            },",
											"            \"contents\":{",
											"                \"type\": \"string\"",
											"            },",
											"            \"notice_id\": {",
											"                \"maxinum\": 65535,",
											"                \"mininum\": 0,",
											"                \"type\": \"integer\"",
											"            },",
											"            \"open_date\": {",
											"                \"type\": \"string\",",
											"                \"format\": \"date\"",
											"            },",
											"            \"close_date\": {",
											"                \"type\": \"string\",",
											"                \"format\": \"date\"",
											"            }",
											"    }",
											"}",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/notices/5",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"notices",
										"5"
									],
									"query": [
										{
											"key": "isp_code",
											"value": "hogehoge01",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Notice Detail 404 NotFound",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"  pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/notices/11111",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"notices",
										"11111"
									],
									"query": [
										{
											"key": "isp_code",
											"value": "hogehoge01",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Notice Detail 400 Error Invalid Resources(notice_id)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"  pm.response.to.have.status(400);",
											"});",
											"",
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"required\":[\"errorMessage\", \"moreInfo\"],",
											"    \"properties\": {",
											"        \"errorMessage\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"moreInfo\": {",
											"            \"type\": \"string\"",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"",
											"pm.test(\"errorMessage\", function () {",
											"  var jsonData = pm.response.json();",
											"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/notices/sss",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"notices",
										"sss"
									],
									"query": [
										{
											"key": "isp_code",
											"value": "hogehoge01",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Notice Detail 500 Error DB Connection Error with Faker",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"  pm.response.to.have.status(500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									},
									{
										"key": "X-Xaas-Illusion",
										"value": "DBConnectionError",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/notices/4",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"notices",
										"4"
									],
									"query": [
										{
											"key": "isp_code",
											"value": "hogehoge01",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Notice Detail 500 Unexpected Error with Faker",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"  pm.response.to.have.status(500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									},
									{
										"key": "X-Xaas-Illusion",
										"value": "SODBUnexpectedError",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/notices/4",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"notices",
										"4"
									],
									"query": [
										{
											"key": "isp_code",
											"value": "hogehoge01",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "WaitingTime",
			"item": [
				{
					"name": "v1",
					"item": [
						{
							"name": "WaitingTime 200 OK (no params)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const schema = {",
											"\t\"type\": \"array\",",
											"\t\"items\": {",
											"\t\t\"type\": \"object\",",
											"\t\t\"required\": [",
											"\t\t\t\"date\",",
											"\t\t\t\"east_west\",",
											"\t\t\t\"waiting_time_average\",",
											"\t\t\t\"waiting_time_max\",",
											"\t\t\t\"waiting_time_median\"",
											"\t\t],",
											"\t\t\"properties\": {",
											"\t\t\t\"date\": {",
											"                \"type\": \"string\",",
											"                \"format\": \"date\"",
											"\t\t\t},",
											"\t\t\t\"east_west\": {",
											"\t\t\t\t\"type\": \"string\",",
											"                \"enum\": [",
											"                    \"east\",",
											"                    \"west\"",
											"                ]",
											"\t\t\t},",
											"\t\t\t\"waiting_time_average\": {",
											"\t\t\t\t\"type\": \"number\"",
											"\t\t\t},",
											"\t\t\t\"waiting_time_max\": {",
											"\t\t\t\t\"type\": \"number\"",
											"\t\t\t},",
											"\t\t\t\"waiting_time_median\": {",
											"\t\t\t\t\"type\": \"number\"",
											"\t\t\t}",
											"\t\t}",
											"\t}",
											"}",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/waitingtime",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"waitingtime"
									],
									"query": [
										{
											"key": "isp_code",
											"value": "hogehoge01",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "WaitingTime East 200 OK (no params)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const schema =  {",
											"\t\"type\": \"array\",",
											"\t\"items\": {",
											"\t\t\"type\": \"object\",",
											"\t\t\"required\": [",
											"\t\t\t\"date\",",
											"\t\t\t\"east_west\",",
											"\t\t\t\"waiting_time_average\",",
											"\t\t\t\"waiting_time_max\",",
											"\t\t\t\"waiting_time_median\"",
											"\t\t],",
											"\t\t\"properties\": {",
											"\t\t\t\"date\": {",
											"                \"type\": \"string\",",
											"                \"format\": \"date\"",
											"\t\t\t},",
											"\t\t\t\"east_west\": {",
											"\t\t\t\t\"type\": \"string\",",
											"                \"enum\": [",
											"                    \"east\"",
											"                ]",
											"\t\t\t},",
											"\t\t\t\"waiting_time_average\": {",
											"\t\t\t\t\"type\": \"number\"",
											"\t\t\t},",
											"\t\t\t\"waiting_time_max\": {",
											"\t\t\t\t\"type\": \"number\"",
											"\t\t\t},",
											"\t\t\t\"waiting_time_median\": {",
											"\t\t\t\t\"type\": \"number\"",
											"\t\t\t}",
											"\t\t}",
											"\t}",
											"}",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/waitingtime/east",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"waitingtime",
										"east"
									],
									"query": [
										{
											"key": "isp_code",
											"value": "hogehoge01",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "WaitingTime West 200 OK (no params)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const schema =  {",
											"\t\"type\": \"array\",",
											"\t\"items\": {",
											"\t\t\"type\": \"object\",",
											"\t\t\"required\": [",
											"\t\t\t\"date\",",
											"\t\t\t\"east_west\",",
											"\t\t\t\"waiting_time_average\",",
											"\t\t\t\"waiting_time_max\",",
											"\t\t\t\"waiting_time_median\"",
											"\t\t],",
											"\t\t\"properties\": {",
											"\t\t\t\"date\": {",
											"                \"type\": \"string\",",
											"                \"format\": \"date\"",
											"\t\t\t},",
											"\t\t\t\"east_west\": {",
											"\t\t\t\t\"type\": \"string\",",
											"                \"enum\": [",
											"                    \"west\"",
											"                ]",
											"\t\t\t},",
											"\t\t\t\"waiting_time_average\": {",
											"\t\t\t\t\"type\": \"number\"",
											"\t\t\t},",
											"\t\t\t\"waiting_time_max\": {",
											"\t\t\t\t\"type\": \"number\"",
											"\t\t\t},",
											"\t\t\t\"waiting_time_median\": {",
											"\t\t\t\t\"type\": \"number\"",
											"\t\t\t}",
											"\t\t}",
											"\t}",
											"}",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/waitingtime/west",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"waitingtime",
										"west"
									],
									"query": [
										{
											"key": "isp_code",
											"value": "hogehoge01",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "WaitingTime 200 OK (All params)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const schema =  {",
											"\t\"type\": \"array\",",
											"\t\"items\": {",
											"\t\t\"type\": \"object\",",
											"\t\t\"required\": [",
											"\t\t\t\"date\",",
											"\t\t\t\"east_west\",",
											"\t\t\t\"waiting_time_average\",",
											"\t\t\t\"waiting_time_max\",",
											"\t\t\t\"waiting_time_median\"",
											"\t\t],",
											"\t\t\"properties\": {",
											"\t\t\t\"date\": {",
											"                \"type\": \"string\",",
											"                \"format\": \"date\"",
											"\t\t\t},",
											"\t\t\t\"east_west\": {",
											"\t\t\t\t\"type\": \"string\",",
											"                \"enum\": [",
											"                    \"east\",",
											"                    \"west\"",
											"                ]",
											"\t\t\t},",
											"\t\t\t\"waiting_time_average\": {",
											"\t\t\t\t\"type\": \"number\"",
											"\t\t\t},",
											"\t\t\t\"waiting_time_max\": {",
											"\t\t\t\t\"type\": \"number\"",
											"\t\t\t},",
											"\t\t\t\"waiting_time_median\": {",
											"\t\t\t\t\"type\": \"number\"",
											"\t\t\t}",
											"\t\t}",
											"\t}",
											"}",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/waitingtime?year_month=2021-12",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"waitingtime"
									],
									"query": [
										{
											"key": "limit",
											"value": "2",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"disabled": true
										},
										{
											"key": "year_month",
											"value": "2021-12"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "WaitingTime Empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const schema =  {",
											"\t\"type\": \"array\",",
											"\t\"items\": {",
											"\t\t\"type\": \"object\",",
											"\t\t\"required\": [",
											"\t\t\t\"date\",",
											"\t\t\t\"east_west\",",
											"\t\t\t\"waiting_time_average\",",
											"\t\t\t\"waiting_time_max\",",
											"\t\t\t\"waiting_time_median\"",
											"\t\t],",
											"\t\t\"properties\": {",
											"\t\t\t\"date\": {",
											"                \"type\": \"string\",",
											"                \"format\": \"date\"",
											"\t\t\t},",
											"\t\t\t\"east_west\": {",
											"\t\t\t\t\"type\": \"string\",",
											"                \"enum\": [",
											"                    \"east\",",
											"                    \"west\"",
											"                ]",
											"\t\t\t},",
											"\t\t\t\"waiting_time_average\": {",
											"\t\t\t\t\"type\": \"number\"",
											"\t\t\t},",
											"\t\t\t\"waiting_time_max\": {",
											"\t\t\t\t\"type\": \"number\"",
											"\t\t\t},",
											"\t\t\t\"waiting_time_median\": {",
											"\t\t\t\t\"type\": \"number\"",
											"\t\t\t}",
											"\t\t}",
											"\t}",
											"}",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/waitingtime?limit=2&offset=0&year_month=2020-10",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"waitingtime"
									],
									"query": [
										{
											"key": "limit",
											"value": "2"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "year_month",
											"value": "2020-10"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "WaitingTime East 200 OK (All params)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const schema =  {",
											"\t\"type\": \"array\",",
											"\t\"items\": {",
											"\t\t\"type\": \"object\",",
											"\t\t\"required\": [",
											"\t\t\t\"date\",",
											"\t\t\t\"east_west\",",
											"\t\t\t\"waiting_time_average\",",
											"\t\t\t\"waiting_time_max\",",
											"\t\t\t\"waiting_time_median\"",
											"\t\t],",
											"\t\t\"properties\": {",
											"\t\t\t\"date\": {",
											"                \"type\": \"string\",",
											"                \"format\": \"date\"",
											"\t\t\t},",
											"\t\t\t\"east_west\": {",
											"\t\t\t\t\"type\": \"string\",",
											"                \"enum\": [",
											"                    \"east\"",
											"                ]",
											"\t\t\t},",
											"\t\t\t\"waiting_time_average\": {",
											"\t\t\t\t\"type\": \"number\"",
											"\t\t\t},",
											"\t\t\t\"waiting_time_max\": {",
											"\t\t\t\t\"type\": \"number\"",
											"\t\t\t},",
											"\t\t\t\"waiting_time_median\": {",
											"\t\t\t\t\"type\": \"number\"",
											"\t\t\t}",
											"\t\t}",
											"\t}",
											"}",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/waitingtime/east?limit=2&offset=0&year_month=2020-10",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"waitingtime",
										"east"
									],
									"query": [
										{
											"key": "limit",
											"value": "2"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "year_month",
											"value": "2020-10"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "WaitingTime West 200 OK (All params)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const schema =  {",
											"\t\"type\": \"array\",",
											"\t\"items\": {",
											"\t\t\"type\": \"object\",",
											"\t\t\"required\": [",
											"\t\t\t\"date\",",
											"\t\t\t\"east_west\",",
											"\t\t\t\"waiting_time_average\",",
											"\t\t\t\"waiting_time_max\",",
											"\t\t\t\"waiting_time_median\"",
											"\t\t],",
											"\t\t\"properties\": {",
											"\t\t\t\"date\": {",
											"                \"type\": \"string\",",
											"                \"format\": \"date\"",
											"\t\t\t},",
											"\t\t\t\"east_west\": {",
											"\t\t\t\t\"type\": \"string\",",
											"                \"enum\": [",
											"                    \"west\"",
											"                ]",
											"\t\t\t},",
											"\t\t\t\"waiting_time_average\": {",
											"\t\t\t\t\"type\": \"number\"",
											"\t\t\t},",
											"\t\t\t\"waiting_time_max\": {",
											"\t\t\t\t\"type\": \"number\"",
											"\t\t\t},",
											"\t\t\t\"waiting_time_median\": {",
											"\t\t\t\t\"type\": \"number\"",
											"\t\t\t}",
											"\t\t}",
											"\t}",
											"}",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"  pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/waitingtime/west?limit=2&offset=0&year_month=2020-10",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"waitingtime",
										"west"
									],
									"query": [
										{
											"key": "limit",
											"value": "2"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "year_month",
											"value": "2020-10"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "WaitingTime 404 Error Invalid Resources(east_west)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"  pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/waitingtime/sss",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"waitingtime",
										"sss"
									]
								}
							},
							"response": []
						},
						{
							"name": "WaitingTime 400 Error Invalid Param(year_month)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"  pm.response.to.have.status(400);",
											"});",
											"",
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"required\":[\"errorMessage\", \"moreInfo\"],",
											"    \"properties\": {",
											"        \"errorMessage\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"moreInfo\": {",
											"            \"type\": \"string\"",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"",
											"pm.test(\"errorMessage\", function () {",
											"  var jsonData = pm.response.json();",
											"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/waitingtime?year_month=2021-ss",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"waitingtime"
									],
									"query": [
										{
											"key": "year_month",
											"value": "2021-ss"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "WaitingTime 400 Error Invalid Param(limit)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"  pm.response.to.have.status(400);",
											"});",
											"",
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"required\":[\"errorMessage\", \"moreInfo\"],",
											"    \"properties\": {",
											"        \"errorMessage\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"moreInfo\": {",
											"            \"type\": \"string\"",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"",
											"pm.test(\"errorMessage\", function () {",
											"  var jsonData = pm.response.json();",
											"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/waitingtime?limit=s",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"waitingtime"
									],
									"query": [
										{
											"key": "limit",
											"value": "s"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "WaitingTime 400 Error Invalid Param(offset)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"  pm.response.to.have.status(400);",
											"});",
											"",
											"const schema = {",
											"    \"type\": \"object\",",
											"    \"required\":[\"errorMessage\", \"moreInfo\"],",
											"    \"properties\": {",
											"        \"errorMessage\": {",
											"            \"type\": \"string\"",
											"        },",
											"        \"moreInfo\": {",
											"            \"type\": \"string\"",
											"        }",
											"    }",
											"}",
											"",
											"pm.test(\"Validate schema\", function () {",
											"  pm.response.to.have.jsonSchema(schema)",
											"});",
											"",
											"pm.test(\"errorMessage\", function () {",
											"  var jsonData = pm.response.json();",
											"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/waitingtime?offset=s",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"waitingtime"
									],
									"query": [
										{
											"key": "offset",
											"value": "s"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Notices 500 Error DB Connection Error with Faker",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"  pm.response.to.have.status(500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									},
									{
										"key": "X-Xaas-Illusion",
										"value": "DBConnectionError",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/waitingtime",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"waitingtime"
									]
								}
							},
							"response": []
						},
						{
							"name": "Notices 500 Error Unexpected Error with Faker",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"  pm.response.to.have.status(500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"strictSSL": false
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									},
									{
										"key": "X-Xaas-Illusion",
										"value": "SODBUnexpectedError",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{HOST}}/v1/waitingtime",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"waitingtime"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Maintenance",
			"item": [
				{
					"name": "v1",
					"item": [
						{
							"name": "maintenance (from and to are the same)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"from_date と to_dateが同じ値の場合の挙動を確認\r",
											"\r",
											"*/\r",
											"pm.test(\"Status Code is as expected \", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{HOST}}/v1/maintenance?from_date=2021-04-24&to_date=2021-04-24",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"maintenance"
									],
									"query": [
										{
											"key": "from_date",
											"value": "2021-04-24"
										},
										{
											"key": "to_date",
											"value": "2021-04-24"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "maintenance (from and to are reversed)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"from_dateのみの場合の挙動を確認\r",
											"\r",
											"*/\r",
											"\r",
											"pm.test(\"Status Code is as expected \", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{HOST}}/v1/maintenance?from_date=2022-01-01&to_date=2021-04-24",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"maintenance"
									],
									"query": [
										{
											"key": "from_date",
											"value": "2022-01-01"
										},
										{
											"key": "to_date",
											"value": "2021-04-24"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "maintenance (from_date only)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"from_date と to_dateが重複している場合の挙動を確認\r",
											"\r",
											"*/\r",
											"\r",
											"pm.test(\"Status Code is as expected \", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{HOST}}/v1/maintenance?from_date=2021-04-01",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"maintenance"
									],
									"query": [
										{
											"key": "from_date",
											"value": "2021-04-01"
										},
										{
											"key": "to_date",
											"value": "2021-04-24",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "maintenance (to_date only)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"from_date と to_dateが重複している場合の挙動を確認\r",
											"\r",
											"*/\r",
											"\r",
											"pm.test(\"Status Code is as expected \", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{HOST}}/v1/maintenance?to_date=2021-04-24",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"maintenance"
									],
									"query": [
										{
											"key": "from_date",
											"value": "2021-04-24",
											"disabled": true
										},
										{
											"key": "to_date",
											"value": "2021-04-24"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "maintenance (limit only)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"from_date と to_dateが重複している場合の挙動を確認\r",
											"\r",
											"*/\r",
											"\r",
											"pm.test(\"Status Code is as expected \", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{HOST}}/v1/maintenance?limit=3",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"maintenance"
									],
									"query": [
										{
											"key": "from_date",
											"value": "2021-04-24",
											"disabled": true
										},
										{
											"key": "to_date",
											"value": "2021-04-24",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "maintenance (from_date format is YYYMMDD)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"from_date と to_dateが重複している場合の挙動を確認\r",
											"\r",
											"*/\r",
											"\r",
											"pm.test(\"Status Code is as expected \", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{HOST}}/v1/maintenance?to_date=20210424",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"maintenance"
									],
									"query": [
										{
											"key": "from_date",
											"value": "20210424",
											"disabled": true
										},
										{
											"key": "to_date",
											"value": "20210424"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "maintenance (from_date format is YYY/MM/DD)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"from_date と to_dateが重複している場合の挙動を確認\r",
											"\r",
											"*/\r",
											"\r",
											"pm.test(\"Status Code is as expected \", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{HOST}}/v1/maintenance?from_date=2021/04/24",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"maintenance"
									],
									"query": [
										{
											"key": "from_date",
											"value": "2021/04/24"
										},
										{
											"key": "to_date",
											"value": "2021/04/24",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "maintenance (limit is minus value)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"limit がマイナスの場合の挙動を確認\r",
											"\r",
											"*/\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"const schema = {\r",
											"    \"type\": \"object\",\r",
											"    \"required\":[\"errorMessage\", \"moreInfo\"],\r",
											"    \"properties\": {\r",
											"        \"errorMessage\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"moreInfo\": {\r",
											"            \"type\": \"string\"\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"pm.test(\"Validate schema\", function () {\r",
											"  pm.response.to.have.jsonSchema(schema)\r",
											"});\r",
											"\r",
											"pm.test(\"errorMessage\", function () {\r",
											"  var jsonData = pm.response.json();\r",
											"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{HOST}}/v1/maintenance?limit=-1",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"maintenance"
									],
									"query": [
										{
											"key": "from_date",
											"value": "2021-04-24",
											"disabled": true
										},
										{
											"key": "to_date",
											"value": "2021-04-24",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "-1"
										},
										{
											"key": "offset",
											"value": "-1",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "maintenance (limit is 0 value)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"limit が0の場合の挙動を確認\r",
											"\r",
											"*/\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"const schema = {\r",
											"    \"type\": \"object\",\r",
											"    \"required\":[\"errorMessage\", \"moreInfo\"],\r",
											"    \"properties\": {\r",
											"        \"errorMessage\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"moreInfo\": {\r",
											"            \"type\": \"string\"\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"pm.test(\"Validate schema\", function () {\r",
											"  pm.response.to.have.jsonSchema(schema)\r",
											"});\r",
											"\r",
											"pm.test(\"errorMessage\", function () {\r",
											"  var jsonData = pm.response.json();\r",
											"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{HOST}}/v1/maintenance?limit=0",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"maintenance"
									],
									"query": [
										{
											"key": "from_date",
											"value": "2021-04-24",
											"disabled": true
										},
										{
											"key": "to_date",
											"value": "2021-04-24",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "maintenance (limit is string)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"limit が0の場合の挙動を確認\r",
											"\r",
											"*/\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"const schema = {\r",
											"    \"type\": \"object\",\r",
											"    \"required\":[\"errorMessage\", \"moreInfo\"],\r",
											"    \"properties\": {\r",
											"        \"errorMessage\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"moreInfo\": {\r",
											"            \"type\": \"string\"\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"pm.test(\"Validate schema\", function () {\r",
											"  pm.response.to.have.jsonSchema(schema)\r",
											"});\r",
											"\r",
											"pm.test(\"errorMessage\", function () {\r",
											"  var jsonData = pm.response.json();\r",
											"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{HOST}}/v1/maintenance?limit=test",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"maintenance"
									],
									"query": [
										{
											"key": "from_date",
											"value": "2021-04-24",
											"disabled": true
										},
										{
											"key": "to_date",
											"value": "2021-04-24",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "test"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "maintenance (limit is decimal)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"limit が0の場合の挙動を確認\r",
											"\r",
											"*/\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"const schema = {\r",
											"    \"type\": \"object\",\r",
											"    \"required\":[\"errorMessage\", \"moreInfo\"],\r",
											"    \"properties\": {\r",
											"        \"errorMessage\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"moreInfo\": {\r",
											"            \"type\": \"string\"\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"pm.test(\"Validate schema\", function () {\r",
											"  pm.response.to.have.jsonSchema(schema)\r",
											"});\r",
											"\r",
											"pm.test(\"errorMessage\", function () {\r",
											"  var jsonData = pm.response.json();\r",
											"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{HOST}}/v1/maintenance?limit=1.0",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"maintenance"
									],
									"query": [
										{
											"key": "from_date",
											"value": "2021-04-24",
											"disabled": true
										},
										{
											"key": "to_date",
											"value": "2021-04-24",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "1.0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "maintenance (offset is minus value)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"offset がマイナスの場合の挙動を確認\r",
											"\r",
											"*/\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"const schema = {\r",
											"    \"type\": \"object\",\r",
											"    \"required\":[\"errorMessage\", \"moreInfo\"],\r",
											"    \"properties\": {\r",
											"        \"errorMessage\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"moreInfo\": {\r",
											"            \"type\": \"string\"\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"pm.test(\"Validate schema\", function () {\r",
											"  pm.response.to.have.jsonSchema(schema)\r",
											"});\r",
											"\r",
											"pm.test(\"errorMessage\", function () {\r",
											"  var jsonData = pm.response.json();\r",
											"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{HOST}}/v1/maintenance?offset=-1",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"maintenance"
									],
									"query": [
										{
											"key": "from_date",
											"value": "2021-04-24",
											"disabled": true
										},
										{
											"key": "to_date",
											"value": "2021-04-24",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "-1",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "-1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "maintenance (offset is 0 value)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"offset が０の場合の挙動を確認\r",
											"\r",
											"*/\r",
											"pm.test(\"Status Code is as expected \", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{HOST}}/v1/maintenance?offset=0",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"maintenance"
									],
									"query": [
										{
											"key": "from_date",
											"value": "2021-04-24",
											"disabled": true
										},
										{
											"key": "to_date",
											"value": "2021-04-24",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "-1",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "maintenance (offset only)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"limit がマイナスの場合の挙動を確認\r",
											"\r",
											"*/\r",
											"pm.test(\"Status Code is as expected \", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{HOST}}/v1/maintenance?offset=1",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"maintenance"
									],
									"query": [
										{
											"key": "from_date",
											"value": "2021-04-24",
											"disabled": true
										},
										{
											"key": "to_date",
											"value": "2021-04-24",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "-1",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "maintenance (offset is string)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"offset がstringの場合の挙動を確認\r",
											"\r",
											"*/\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"const schema = {\r",
											"    \"type\": \"object\",\r",
											"    \"required\":[\"errorMessage\", \"moreInfo\"],\r",
											"    \"properties\": {\r",
											"        \"errorMessage\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"moreInfo\": {\r",
											"            \"type\": \"string\"\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"pm.test(\"Validate schema\", function () {\r",
											"  pm.response.to.have.jsonSchema(schema)\r",
											"});\r",
											"\r",
											"pm.test(\"errorMessage\", function () {\r",
											"  var jsonData = pm.response.json();\r",
											"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{HOST}}/v1/maintenance?offset=test",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"maintenance"
									],
									"query": [
										{
											"key": "from_date",
											"value": "2021-04-24",
											"disabled": true
										},
										{
											"key": "to_date",
											"value": "2021-04-24",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "-1",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "test"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "maintenance (offset is decimal)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"offset がdecimalの場合の挙動を確認\r",
											"\r",
											"*/\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"  pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"const schema = {\r",
											"    \"type\": \"object\",\r",
											"    \"required\":[\"errorMessage\", \"moreInfo\"],\r",
											"    \"properties\": {\r",
											"        \"errorMessage\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"moreInfo\": {\r",
											"            \"type\": \"string\"\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"pm.test(\"Validate schema\", function () {\r",
											"  pm.response.to.have.jsonSchema(schema)\r",
											"});\r",
											"\r",
											"pm.test(\"errorMessage\", function () {\r",
											"  var jsonData = pm.response.json();\r",
											"  pm.expect(jsonData.errorMessage).to.eql(\"Invalid request\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{HOST}}/v1/maintenance?offset=1.0",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"maintenance"
									],
									"query": [
										{
											"key": "from_date",
											"value": "2021-04-24",
											"disabled": true
										},
										{
											"key": "to_date",
											"value": "2021-04-24",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "-1",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "1.0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "maintenance 200 OK(schema check)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"const schema = {\r",
											"    \"type\": \"array\",\r",
											"    \"items\": {\r",
											"        \"type\": \"object\",\r",
											"        \"required\": [\r",
											"            \"id\",\r",
											"            \"service\",\r",
											"            \"category\",\r",
											"            \"start_datetime\",\r",
											"            \"end_datetime\",\r",
											"            \"order_stop_datetime\"\r",
											"        ],\r",
											"        \"properties\" : {\r",
											"            \"id\": {\r",
											"                \"type\": \"number\"\r",
											"            },\r",
											"            \"service\": {\r",
											"                \"type\": \"string\"\r",
											"            },\r",
											"            \"category\": {\r",
											"                \"type\": \"string\"\r",
											"            },\r",
											"            \"start_datetime\": {\r",
											"                \"type\": \"string\",\r",
											"                \"pattern\": \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}\"\r",
											"                \r",
											"            },\r",
											"            \"end_datetime\": {\r",
											"                \"type\": \"string\",\r",
											"                \"pattern\": \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}\"\r",
											"                \r",
											"            },\r",
											"             \"order_stop_datetime\": {\r",
											"                \"type\": \"string\",\r",
											"                \"pattern\": \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}\"\r",
											"                \r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"\r",
											"pm.test(\"Validate schema\", function () {\r",
											"  pm.response.to.have.jsonSchema(schema)\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Status Code is as expected \", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Xaas-Auth-Token",
										"value": "{{X-Xaas-Auth-Token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{HOST}}/v1/maintenance",
									"protocol": "https",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"v1",
										"maintenance"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "アカウント削除",
			"item": [
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"  pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Xaas-Auth-Token",
								"value": "{{PARENT-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{HOST}}/v1/users/{{USERNAME}}",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"v1",
								"users",
								"{{USERNAME}}"
							],
							"query": [
								{
									"key": "isp_code",
									"value": "hogehoge01",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Parent(/v1/register's')",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"  pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Xaas-Auth-Token",
								"value": "{{REGISTER-TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{HOST}}/v1/registers/{{PARENT-USERNAME}}",
							"protocol": "https",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"v1",
								"registers",
								"{{PARENT-USERNAME}}"
							],
							"query": [
								{
									"key": "isp_code",
									"value": "hogehoge01",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}